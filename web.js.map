{"version":3,"sources":["webpack://CustomAgile/webpack/bootstrap","webpack://CustomAgile/./index.ts","webpack://CustomAgile/./node_modules/bottleneck/lib/Batcher.js","webpack://CustomAgile/./node_modules/bottleneck/lib/Bottleneck.js","webpack://CustomAgile/./node_modules/bottleneck/lib/BottleneckError.js","webpack://CustomAgile/./node_modules/bottleneck/lib/DLList.js","webpack://CustomAgile/./node_modules/bottleneck/lib/Events.js","webpack://CustomAgile/./node_modules/bottleneck/lib/Group.js","webpack://CustomAgile/./node_modules/bottleneck/lib/IORedisConnection.js","webpack://CustomAgile/./node_modules/bottleneck/lib/Job.js","webpack://CustomAgile/./node_modules/bottleneck/lib/LocalDatastore.js","webpack://CustomAgile/./node_modules/bottleneck/lib/Queues.js","webpack://CustomAgile/./node_modules/bottleneck/lib/RedisConnection.js","webpack://CustomAgile/./node_modules/bottleneck/lib/RedisDatastore.js","webpack://CustomAgile/./node_modules/bottleneck/lib/Scripts.js","webpack://CustomAgile/./node_modules/bottleneck/lib/States.js","webpack://CustomAgile/./node_modules/bottleneck/lib/Sync.js","webpack://CustomAgile/./node_modules/bottleneck/lib/index.js","webpack://CustomAgile/./node_modules/bottleneck/lib/parser.js","webpack://CustomAgile/./src/ClassClients.ts","webpack://CustomAgile/./src/Client.ts","webpack://CustomAgile/./src/Common.ts","webpack://CustomAgile/./src/Ref.ts","webpack://CustomAgile/./src/Throttle.ts","webpack://CustomAgile/external \"_\"","webpack://CustomAgile/external \"fetch\""],"names":[],"mappings":"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A;;AAEA;;AAEA,iDAAiD,WAAW;;AAE5D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iDAAiD,WAAW;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA,qBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA,4DAA4D,WAAW;AACvE;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,0GAA0G,eAAe;;AAEzH;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sDAAsD,mBAAO,CAAC,kEAAgB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,mBAAO,CAAC,2EAAmB;AACjG,kDAAkD,mBAAO,CAAC,uDAAS;AACnE,sEAAsE,mBAAO,CAAC,2EAAmB;AACjG,0EAA0E,mBAAO,CAAC,+EAAqB;AACvG,sDAAsD,mBAAO,CAAC,2DAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,4B;;;;;;;;;;;;ACjlBa;;AAEb;AACA;AACA,iC;;;;;;;;;;;;ACJa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA,wB;;;;;;;;;;;;AC1Ga;;AAEb,4EAA4E,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,4CAA4C,EAAE;;AAEvQ,gCAAgC,qBAAqB,mCAAmC,gDAAgD,gCAAgC,wBAAwB,wEAAwE,EAAE,uBAAuB,uEAAuE,EAAE,kBAAkB,EAAE,EAAE,GAAG;;AAEnY;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAqD,KAAK;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;;AAEA,kBAAkB,IAAkB;AACpC;AACA;;AAEA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA,YAAY,IAAkB;AAC9B;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA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AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,mC;;;;;;;;;;;;ACzLa;;AAEb,4EAA4E,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,4CAA4C,EAAE;;AAEvQ,gCAAgC,qBAAqB,mCAAmC,gDAAgD,gCAAgC,wBAAwB,wEAAwE,EAAE,uBAAuB,uEAAuE,EAAE,kBAAkB,EAAE,EAAE,GAAG;;AAEnY;AACA;AACA;AACA,SAAS,mBAAO,CAAC,yDAAU;AAC3B,kBAAkB,mBAAO,CAAC,2EAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,gBAAgB,GAAG,oBAAoB;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,KAAK;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sDAAsD,OAAO,aAAa,SAAS;AACnF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,wBAAwB;AACpF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qDAAqD,kBAAkB,SAAS,WAAW;;AAE3F;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,qB;;;;;;;;;;;;ACtNa;;AAEb,4EAA4E,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,4CAA4C,EAAE;;AAEvQ,gCAAgC,qBAAqB,mCAAmC,gDAAgD,gCAAgC,wBAAwB,wEAAwE,EAAE,uBAAuB,uEAAuE,EAAE,kBAAkB,EAAE,EAAE,GAAG;;AAEnY;AACA,SAAS,mBAAO,CAAC,yDAAU;AAC3B,kBAAkB,mBAAO,CAAC,2EAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gFAAgF,OAAO,kDAAkD,mCAAmC;AAC5K;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,gC;;;;;;;;;;;;AC9Ra;;AAEb;AACA,SAAS,mBAAO,CAAC,yDAAU;AAC3B,SAAS,mBAAO,CAAC,yDAAU;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C,gCAAgC;AAC3E;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,iCAAiC,SAAS;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wB;;;;;;;;;;;;AC5Ea;;AAEb,4EAA4E,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,4CAA4C,EAAE;;AAEvQ,gCAAgC,qBAAqB,mCAAmC,gDAAgD,gCAAgC,wBAAwB,wEAAwE,EAAE,uBAAuB,uEAAuE,EAAE,kBAAkB,EAAE,EAAE,GAAG;;AAEnY;AACA,SAAS,mBAAO,CAAC,yDAAU;AAC3B,SAAS,mBAAO,CAAC,yDAAU;AAC3B,UAAU,mBAAO,CAAC,2DAAW;;AAE7B;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,iC;;;;;;;;;;;;AChMa;;AAEb,iCAAiC,oFAAoF;;AAErH,6BAA6B,6EAA6E;;AAE1G,wCAAwC,eAAe,eAAe,gBAAgB,oBAAoB,MAAM,0CAA0C,+BAA+B,aAAa,qBAAqB,mCAAmC,EAAE,EAAE,cAAc,WAAW,UAAU,EAAE,UAAU,MAAM,iDAAiD,EAAE,UAAU,kBAAkB,EAAE,EAAE,aAAa;;AAEvZ,+BAA+B,oCAAoC;;AAEnE,4EAA4E,MAAM,0BAA0B,wBAAwB,EAAE,gBAAgB,eAAe,QAAQ,EAAE,iBAAiB,gBAAgB,EAAE,OAAO,4CAA4C,EAAE;;AAEvQ,gCAAgC,qBAAqB,mCAAmC,gDAAgD,gCAAgC,wBAAwB,wEAAwE,EAAE,uBAAuB,uEAAuE,EAAE,kBAAkB,EAAE,EAAE,GAAG;;AAEnY;AACA,SAAS,mBAAO,CAAC,yDAAU;AAC3B,kBAAkB,mBAAO,CAAC,2EAAmB;AAC7C,kBAAkB,mBAAO,CAAC,2EAAmB;AAC7C,oBAAoB,mBAAO,CAAC,+EAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,iEAAiE,mBAAmB;AACpF,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uGAAuG,YAAY,IAAI,QAAQ;AAC/H,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yEAAyE,KAAK;;AAE9E;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,iCAAiC,SAAS;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kFAAkF,OAAO,kDAAkD,cAAc;AACzJ,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,gC;;;;;;;;;;;;AC/Va;;AAEb;AACA,MAAM,mBAAO,CAAC,0DAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,E;;;;;;;;;;;;ACjKa;;AAEb;AACA,kBAAkB,mBAAO,CAAC,2EAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;A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","file":"web.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","export * from './src/Client';\nexport * from './src/Classes';\nexport * from './src/Api';\nexport * from './src/ClassClients';\nexport * from './src/Ref';\nexport * from './src/Common';\nexport * from './src/Throttle';\n","\"use strict\";\n\nvar Batcher, Events, parser;\nparser = require(\"./parser\");\nEvents = require(\"./Events\");\n\nBatcher = function () {\n  class Batcher {\n    constructor(options = {}) {\n      this.options = options;\n      parser.load(this.options, this.defaults, this);\n      this.Events = new Events(this);\n      this._arr = [];\n\n      this._resetPromise();\n\n      this._lastFlush = Date.now();\n    }\n\n    _resetPromise() {\n      return this._promise = new this.Promise((res, rej) => {\n        return this._resolve = res;\n      });\n    }\n\n    _flush() {\n      clearTimeout(this._timeout);\n      this._lastFlush = Date.now();\n\n      this._resolve();\n\n      this.Events.trigger(\"batch\", this._arr);\n      this._arr = [];\n      return this._resetPromise();\n    }\n\n    add(data) {\n      var ret;\n\n      this._arr.push(data);\n\n      ret = this._promise;\n\n      if (this._arr.length === this.maxSize) {\n        this._flush();\n      } else if (this.maxTime != null && this._arr.length === 1) {\n        this._timeout = setTimeout(() => {\n          return this._flush();\n        }, this.maxTime);\n      }\n\n      return ret;\n    }\n\n  }\n\n  ;\n  Batcher.prototype.defaults = {\n    maxTime: null,\n    maxSize: null,\n    Promise: Promise\n  };\n  return Batcher;\n}.call(void 0);\n\nmodule.exports = Batcher;","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Bottleneck,\n    DEFAULT_PRIORITY,\n    Events,\n    Job,\n    LocalDatastore,\n    NUM_PRIORITIES,\n    Queues,\n    RedisDatastore,\n    States,\n    Sync,\n    parser,\n    splice = [].splice;\nNUM_PRIORITIES = 10;\nDEFAULT_PRIORITY = 5;\nparser = require(\"./parser\");\nQueues = require(\"./Queues\");\nJob = require(\"./Job\");\nLocalDatastore = require(\"./LocalDatastore\");\nRedisDatastore = require(\"./RedisDatastore\");\nEvents = require(\"./Events\");\nStates = require(\"./States\");\nSync = require(\"./Sync\");\n\nBottleneck = function () {\n  class Bottleneck {\n    constructor(options = {}, ...invalid) {\n      var storeInstanceOptions, storeOptions;\n      this._addToQueue = this._addToQueue.bind(this);\n\n      this._validateOptions(options, invalid);\n\n      parser.load(options, this.instanceDefaults, this);\n      this._queues = new Queues(NUM_PRIORITIES);\n      this._scheduled = {};\n      this._states = new States([\"RECEIVED\", \"QUEUED\", \"RUNNING\", \"EXECUTING\"].concat(this.trackDoneStatus ? [\"DONE\"] : []));\n      this._limiter = null;\n      this.Events = new Events(this);\n      this._submitLock = new Sync(\"submit\", this.Promise);\n      this._registerLock = new Sync(\"register\", this.Promise);\n      storeOptions = parser.load(options, this.storeDefaults, {});\n\n      this._store = function () {\n        if (this.datastore === \"redis\" || this.datastore === \"ioredis\" || this.connection != null) {\n          storeInstanceOptions = parser.load(options, this.redisStoreDefaults, {});\n          return new RedisDatastore(this, storeOptions, storeInstanceOptions);\n        } else if (this.datastore === \"local\") {\n          storeInstanceOptions = parser.load(options, this.localStoreDefaults, {});\n          return new LocalDatastore(this, storeOptions, storeInstanceOptions);\n        } else {\n          throw new Bottleneck.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`);\n        }\n      }.call(this);\n\n      this._queues.on(\"leftzero\", () => {\n        var ref;\n        return (ref = this._store.heartbeat) != null ? typeof ref.ref === \"function\" ? ref.ref() : void 0 : void 0;\n      });\n\n      this._queues.on(\"zero\", () => {\n        var ref;\n        return (ref = this._store.heartbeat) != null ? typeof ref.unref === \"function\" ? ref.unref() : void 0 : void 0;\n      });\n    }\n\n    _validateOptions(options, invalid) {\n      if (!(options != null && typeof options === \"object\" && invalid.length === 0)) {\n        throw new Bottleneck.prototype.BottleneckError(\"Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.\");\n      }\n    }\n\n    ready() {\n      return this._store.ready;\n    }\n\n    clients() {\n      return this._store.clients;\n    }\n\n    channel() {\n      return `b_${this.id}`;\n    }\n\n    channel_client() {\n      return `b_${this.id}_${this._store.clientId}`;\n    }\n\n    publish(message) {\n      return this._store.__publish__(message);\n    }\n\n    disconnect(flush = true) {\n      return this._store.__disconnect__(flush);\n    }\n\n    chain(_limiter) {\n      this._limiter = _limiter;\n      return this;\n    }\n\n    queued(priority) {\n      return this._queues.queued(priority);\n    }\n\n    clusterQueued() {\n      return this._store.__queued__();\n    }\n\n    empty() {\n      return this.queued() === 0 && this._submitLock.isEmpty();\n    }\n\n    running() {\n      return this._store.__running__();\n    }\n\n    done() {\n      return this._store.__done__();\n    }\n\n    jobStatus(id) {\n      return this._states.jobStatus(id);\n    }\n\n    jobs(status) {\n      return this._states.statusJobs(status);\n    }\n\n    counts() {\n      return this._states.statusCounts();\n    }\n\n    _randomIndex() {\n      return Math.random().toString(36).slice(2);\n    }\n\n    check(weight = 1) {\n      return this._store.__check__(weight);\n    }\n\n    _clearGlobalState(index) {\n      if (this._scheduled[index] != null) {\n        clearTimeout(this._scheduled[index].expiration);\n        delete this._scheduled[index];\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    _free(index, job, options, eventInfo) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var e, running;\n\n        try {\n          var _ref = yield _this._store.__free__(index, options.weight);\n\n          running = _ref.running;\n\n          _this.Events.trigger(\"debug\", `Freed ${options.id}`, eventInfo);\n\n          if (running === 0 && _this.empty()) {\n            return _this.Events.trigger(\"idle\");\n          }\n        } catch (error1) {\n          e = error1;\n          return _this.Events.trigger(\"error\", e);\n        }\n      })();\n    }\n\n    _run(index, job, wait) {\n      var clearGlobalState, free, run;\n      job.doRun();\n      clearGlobalState = this._clearGlobalState.bind(this, index);\n      run = this._run.bind(this, index, job);\n      free = this._free.bind(this, index, job);\n      return this._scheduled[index] = {\n        timeout: setTimeout(() => {\n          return job.doExecute(this._limiter, clearGlobalState, run, free);\n        }, wait),\n        expiration: job.options.expiration != null ? setTimeout(function () {\n          return job.doExpire(clearGlobalState, run, free);\n        }, wait + job.options.expiration) : void 0,\n        job: job\n      };\n    }\n\n    _drainOne(capacity) {\n      return this._registerLock.schedule(() => {\n        var args, index, next, options, queue;\n\n        if (this.queued() === 0) {\n          return this.Promise.resolve(null);\n        }\n\n        queue = this._queues.getFirst();\n\n        var _next2 = next = queue.first();\n\n        options = _next2.options;\n        args = _next2.args;\n\n        if (capacity != null && options.weight > capacity) {\n          return this.Promise.resolve(null);\n        }\n\n        this.Events.trigger(\"debug\", `Draining ${options.id}`, {\n          args,\n          options\n        });\n        index = this._randomIndex();\n        return this._store.__register__(index, options.weight, options.expiration).then(({\n          success,\n          wait,\n          reservoir\n        }) => {\n          var empty;\n          this.Events.trigger(\"debug\", `Drained ${options.id}`, {\n            success,\n            args,\n            options\n          });\n\n          if (success) {\n            queue.shift();\n            empty = this.empty();\n\n            if (empty) {\n              this.Events.trigger(\"empty\");\n            }\n\n            if (reservoir === 0) {\n              this.Events.trigger(\"depleted\", empty);\n            }\n\n            this._run(index, next, wait);\n\n            return this.Promise.resolve(options.weight);\n          } else {\n            return this.Promise.resolve(null);\n          }\n        });\n      });\n    }\n\n    _drainAll(capacity, total = 0) {\n      return this._drainOne(capacity).then(drained => {\n        var newCapacity;\n\n        if (drained != null) {\n          newCapacity = capacity != null ? capacity - drained : capacity;\n          return this._drainAll(newCapacity, total + drained);\n        } else {\n          return this.Promise.resolve(total);\n        }\n      }).catch(e => {\n        return this.Events.trigger(\"error\", e);\n      });\n    }\n\n    _dropAllQueued(message) {\n      return this._queues.shiftAll(function (job) {\n        return job.doDrop({\n          message\n        });\n      });\n    }\n\n    stop(options = {}) {\n      var done, waitForExecuting;\n      options = parser.load(options, this.stopDefaults);\n\n      waitForExecuting = at => {\n        var finished;\n\n        finished = () => {\n          var counts;\n          counts = this._states.counts;\n          return counts[0] + counts[1] + counts[2] + counts[3] === at;\n        };\n\n        return new this.Promise((resolve, reject) => {\n          if (finished()) {\n            return resolve();\n          } else {\n            return this.on(\"done\", () => {\n              if (finished()) {\n                this.removeAllListeners(\"done\");\n                return resolve();\n              }\n            });\n          }\n        });\n      };\n\n      done = options.dropWaitingJobs ? (this._run = function (index, next) {\n        return next.doDrop({\n          message: options.dropErrorMessage\n        });\n      }, this._drainOne = () => {\n        return this.Promise.resolve(null);\n      }, this._registerLock.schedule(() => {\n        return this._submitLock.schedule(() => {\n          var k, ref, v;\n          ref = this._scheduled;\n\n          for (k in ref) {\n            v = ref[k];\n\n            if (this.jobStatus(v.job.options.id) === \"RUNNING\") {\n              clearTimeout(v.timeout);\n              clearTimeout(v.expiration);\n              v.job.doDrop({\n                message: options.dropErrorMessage\n              });\n            }\n          }\n\n          this._dropAllQueued(options.dropErrorMessage);\n\n          return waitForExecuting(0);\n        });\n      })) : this.schedule({\n        priority: NUM_PRIORITIES - 1,\n        weight: 0\n      }, () => {\n        return waitForExecuting(1);\n      });\n\n      this._receive = function (job) {\n        return job._reject(new Bottleneck.prototype.BottleneckError(options.enqueueErrorMessage));\n      };\n\n      this.stop = () => {\n        return this.Promise.reject(new Bottleneck.prototype.BottleneckError(\"stop() has already been called\"));\n      };\n\n      return done;\n    }\n\n    _addToQueue(job) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var args, blocked, error, options, reachedHWM, shifted, strategy;\n        args = job.args;\n        options = job.options;\n\n        try {\n          var _ref2 = yield _this2._store.__submit__(_this2.queued(), options.weight);\n\n          reachedHWM = _ref2.reachedHWM;\n          blocked = _ref2.blocked;\n          strategy = _ref2.strategy;\n        } catch (error1) {\n          error = error1;\n\n          _this2.Events.trigger(\"debug\", `Could not queue ${options.id}`, {\n            args,\n            options,\n            error\n          });\n\n          job.doDrop({\n            error\n          });\n          return false;\n        }\n\n        if (blocked) {\n          job.doDrop();\n          return true;\n        } else if (reachedHWM) {\n          shifted = strategy === Bottleneck.prototype.strategy.LEAK ? _this2._queues.shiftLastFrom(options.priority) : strategy === Bottleneck.prototype.strategy.OVERFLOW_PRIORITY ? _this2._queues.shiftLastFrom(options.priority + 1) : strategy === Bottleneck.prototype.strategy.OVERFLOW ? job : void 0;\n\n          if (shifted != null) {\n            shifted.doDrop();\n          }\n\n          if (shifted == null || strategy === Bottleneck.prototype.strategy.OVERFLOW) {\n            if (shifted == null) {\n              job.doDrop();\n            }\n\n            return reachedHWM;\n          }\n        }\n\n        job.doQueue(reachedHWM, blocked);\n\n        _this2._queues.push(job);\n\n        yield _this2._drainAll();\n        return reachedHWM;\n      })();\n    }\n\n    _receive(job) {\n      if (this._states.jobStatus(job.options.id) != null) {\n        job._reject(new Bottleneck.prototype.BottleneckError(`A job with the same id already exists (id=${job.options.id})`));\n\n        return false;\n      } else {\n        job.doReceive();\n        return this._submitLock.schedule(this._addToQueue, job);\n      }\n    }\n\n    submit(...args) {\n      var cb, fn, job, options, ref, ref1, task;\n\n      if (typeof args[0] === \"function\") {\n        var _ref3, _ref4, _splice$call, _splice$call2;\n\n        ref = args, (_ref3 = ref, _ref4 = _toArray(_ref3), fn = _ref4[0], args = _ref4.slice(1), _ref3), (_splice$call = splice.call(args, -1), _splice$call2 = _slicedToArray(_splice$call, 1), cb = _splice$call2[0], _splice$call);\n        options = parser.load({}, this.jobDefaults);\n      } else {\n        var _ref5, _ref6, _splice$call3, _splice$call4;\n\n        ref1 = args, (_ref5 = ref1, _ref6 = _toArray(_ref5), options = _ref6[0], fn = _ref6[1], args = _ref6.slice(2), _ref5), (_splice$call3 = splice.call(args, -1), _splice$call4 = _slicedToArray(_splice$call3, 1), cb = _splice$call4[0], _splice$call3);\n        options = parser.load(options, this.jobDefaults);\n      }\n\n      task = (...args) => {\n        return new this.Promise(function (resolve, reject) {\n          return fn(...args, function (...args) {\n            return (args[0] != null ? reject : resolve)(args);\n          });\n        });\n      };\n\n      job = new Job(task, args, options, this.jobDefaults, this.rejectOnDrop, this.Events, this._states, this.Promise);\n      job.promise.then(function (args) {\n        return typeof cb === \"function\" ? cb(...args) : void 0;\n      }).catch(function (args) {\n        if (Array.isArray(args)) {\n          return typeof cb === \"function\" ? cb(...args) : void 0;\n        } else {\n          return typeof cb === \"function\" ? cb(args) : void 0;\n        }\n      });\n      return this._receive(job);\n    }\n\n    schedule(...args) {\n      var job, options, task;\n\n      if (typeof args[0] === \"function\") {\n        var _args = args;\n\n        var _args2 = _toArray(_args);\n\n        task = _args2[0];\n        args = _args2.slice(1);\n        options = {};\n      } else {\n        var _args3 = args;\n\n        var _args4 = _toArray(_args3);\n\n        options = _args4[0];\n        task = _args4[1];\n        args = _args4.slice(2);\n      }\n\n      job = new Job(task, args, options, this.jobDefaults, this.rejectOnDrop, this.Events, this._states, this.Promise);\n\n      this._receive(job);\n\n      return job.promise;\n    }\n\n    wrap(fn) {\n      var schedule, wrapped;\n      schedule = this.schedule.bind(this);\n\n      wrapped = function wrapped(...args) {\n        return schedule(fn.bind(this), ...args);\n      };\n\n      wrapped.withOptions = function (options, ...args) {\n        return schedule(options, fn, ...args);\n      };\n\n      return wrapped;\n    }\n\n    updateSettings(options = {}) {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this3._store.__updateSettings__(parser.overwrite(options, _this3.storeDefaults));\n        parser.overwrite(options, _this3.instanceDefaults, _this3);\n        return _this3;\n      })();\n    }\n\n    currentReservoir() {\n      return this._store.__currentReservoir__();\n    }\n\n    incrementReservoir(incr = 0) {\n      return this._store.__incrementReservoir__(incr);\n    }\n\n  }\n\n  ;\n  Bottleneck.default = Bottleneck;\n  Bottleneck.Events = Events;\n  Bottleneck.version = Bottleneck.prototype.version = require(\"./version.json\").version;\n  Bottleneck.strategy = Bottleneck.prototype.strategy = {\n    LEAK: 1,\n    OVERFLOW: 2,\n    OVERFLOW_PRIORITY: 4,\n    BLOCK: 3\n  };\n  Bottleneck.BottleneckError = Bottleneck.prototype.BottleneckError = require(\"./BottleneckError\");\n  Bottleneck.Group = Bottleneck.prototype.Group = require(\"./Group\");\n  Bottleneck.RedisConnection = Bottleneck.prototype.RedisConnection = require(\"./RedisConnection\");\n  Bottleneck.IORedisConnection = Bottleneck.prototype.IORedisConnection = require(\"./IORedisConnection\");\n  Bottleneck.Batcher = Bottleneck.prototype.Batcher = require(\"./Batcher\");\n  Bottleneck.prototype.jobDefaults = {\n    priority: DEFAULT_PRIORITY,\n    weight: 1,\n    expiration: null,\n    id: \"<no-id>\"\n  };\n  Bottleneck.prototype.storeDefaults = {\n    maxConcurrent: null,\n    minTime: 0,\n    highWater: null,\n    strategy: Bottleneck.prototype.strategy.LEAK,\n    penalty: null,\n    reservoir: null,\n    reservoirRefreshInterval: null,\n    reservoirRefreshAmount: null,\n    reservoirIncreaseInterval: null,\n    reservoirIncreaseAmount: null,\n    reservoirIncreaseMaximum: null\n  };\n  Bottleneck.prototype.localStoreDefaults = {\n    Promise: Promise,\n    timeout: null,\n    heartbeatInterval: 250\n  };\n  Bottleneck.prototype.redisStoreDefaults = {\n    Promise: Promise,\n    timeout: null,\n    heartbeatInterval: 5000,\n    clientTimeout: 10000,\n    Redis: null,\n    clientOptions: {},\n    clusterNodes: null,\n    clearDatastore: false,\n    connection: null\n  };\n  Bottleneck.prototype.instanceDefaults = {\n    datastore: \"local\",\n    connection: null,\n    id: \"<no-id>\",\n    rejectOnDrop: true,\n    trackDoneStatus: false,\n    Promise: Promise\n  };\n  Bottleneck.prototype.stopDefaults = {\n    enqueueErrorMessage: \"This limiter has been stopped and cannot accept new jobs.\",\n    dropWaitingJobs: true,\n    dropErrorMessage: \"This limiter has been stopped.\"\n  };\n  return Bottleneck;\n}.call(void 0);\n\nmodule.exports = Bottleneck;","\"use strict\";\n\nvar BottleneckError;\nBottleneckError = class BottleneckError extends Error {};\nmodule.exports = BottleneckError;","\"use strict\";\n\nvar DLList;\nDLList = class DLList {\n  constructor(incr, decr) {\n    this.incr = incr;\n    this.decr = decr;\n    this._first = null;\n    this._last = null;\n    this.length = 0;\n  }\n\n  push(value) {\n    var node;\n    this.length++;\n\n    if (typeof this.incr === \"function\") {\n      this.incr();\n    }\n\n    node = {\n      value,\n      prev: this._last,\n      next: null\n    };\n\n    if (this._last != null) {\n      this._last.next = node;\n      this._last = node;\n    } else {\n      this._first = this._last = node;\n    }\n\n    return void 0;\n  }\n\n  shift() {\n    var value;\n\n    if (this._first == null) {\n      return;\n    } else {\n      this.length--;\n\n      if (typeof this.decr === \"function\") {\n        this.decr();\n      }\n    }\n\n    value = this._first.value;\n\n    if ((this._first = this._first.next) != null) {\n      this._first.prev = null;\n    } else {\n      this._last = null;\n    }\n\n    return value;\n  }\n\n  first() {\n    if (this._first != null) {\n      return this._first.value;\n    }\n  }\n\n  getArray() {\n    var node, ref, results;\n    node = this._first;\n    results = [];\n\n    while (node != null) {\n      results.push((ref = node, node = node.next, ref.value));\n    }\n\n    return results;\n  }\n\n  forEachShift(cb) {\n    var node;\n    node = this.shift();\n\n    while (node != null) {\n      cb(node), node = this.shift();\n    }\n\n    return void 0;\n  }\n\n  debug() {\n    var node, ref, ref1, ref2, results;\n    node = this._first;\n    results = [];\n\n    while (node != null) {\n      results.push((ref = node, node = node.next, {\n        value: ref.value,\n        prev: (ref1 = ref.prev) != null ? ref1.value : void 0,\n        next: (ref2 = ref.next) != null ? ref2.value : void 0\n      }));\n    }\n\n    return results;\n  }\n\n};\nmodule.exports = DLList;","\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Events;\nEvents = class Events {\n  constructor(instance) {\n    this.instance = instance;\n    this._events = {};\n\n    if (this.instance.on != null || this.instance.once != null || this.instance.removeAllListeners != null) {\n      throw new Error(\"An Emitter already exists for this object\");\n    }\n\n    this.instance.on = (name, cb) => {\n      return this._addListener(name, \"many\", cb);\n    };\n\n    this.instance.once = (name, cb) => {\n      return this._addListener(name, \"once\", cb);\n    };\n\n    this.instance.removeAllListeners = (name = null) => {\n      if (name != null) {\n        return delete this._events[name];\n      } else {\n        return this._events = {};\n      }\n    };\n  }\n\n  _addListener(name, status, cb) {\n    var base;\n\n    if ((base = this._events)[name] == null) {\n      base[name] = [];\n    }\n\n    this._events[name].push({\n      cb,\n      status\n    });\n\n    return this.instance;\n  }\n\n  listenerCount(name) {\n    if (this._events[name] != null) {\n      return this._events[name].length;\n    } else {\n      return 0;\n    }\n  }\n\n  trigger(name, ...args) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var e, promises;\n\n      try {\n        if (name !== \"debug\") {\n          _this.trigger(\"debug\", `Event triggered: ${name}`, args);\n        }\n\n        if (_this._events[name] == null) {\n          return;\n        }\n\n        _this._events[name] = _this._events[name].filter(function (listener) {\n          return listener.status !== \"none\";\n        });\n        promises = _this._events[name].map(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(function* (listener) {\n            var e, returned;\n\n            if (listener.status === \"none\") {\n              return;\n            }\n\n            if (listener.status === \"once\") {\n              listener.status = \"none\";\n            }\n\n            try {\n              returned = typeof listener.cb === \"function\" ? listener.cb(...args) : void 0;\n\n              if (typeof (returned != null ? returned.then : void 0) === \"function\") {\n                return yield returned;\n              } else {\n                return returned;\n              }\n            } catch (error) {\n              e = error;\n\n              if (\"name\" !== \"error\") {\n                _this.trigger(\"error\", e);\n              }\n\n              return null;\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        return (yield Promise.all(promises)).find(function (x) {\n          return x != null;\n        });\n      } catch (error) {\n        e = error;\n\n        if (\"name\" !== \"error\") {\n          _this.trigger(\"error\", e);\n        }\n\n        return null;\n      }\n    })();\n  }\n\n};\nmodule.exports = Events;","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Events, Group, IORedisConnection, RedisConnection, Scripts, parser;\nparser = require(\"./parser\");\nEvents = require(\"./Events\");\nRedisConnection = require(\"./RedisConnection\");\nIORedisConnection = require(\"./IORedisConnection\");\nScripts = require(\"./Scripts\");\n\nGroup = function () {\n  class Group {\n    constructor(limiterOptions = {}) {\n      this.deleteKey = this.deleteKey.bind(this);\n      this.limiterOptions = limiterOptions;\n      parser.load(this.limiterOptions, this.defaults, this);\n      this.Events = new Events(this);\n      this.instances = {};\n      this.Bottleneck = require(\"./Bottleneck\");\n\n      this._startAutoCleanup();\n\n      this.sharedConnection = this.connection != null;\n\n      if (this.connection == null) {\n        if (this.limiterOptions.datastore === \"redis\") {\n          this.connection = new RedisConnection(Object.assign({}, this.limiterOptions, {\n            Events: this.Events\n          }));\n        } else if (this.limiterOptions.datastore === \"ioredis\") {\n          this.connection = new IORedisConnection(Object.assign({}, this.limiterOptions, {\n            Events: this.Events\n          }));\n        }\n      }\n    }\n\n    key(key = \"\") {\n      var ref;\n      return (ref = this.instances[key]) != null ? ref : (() => {\n        var limiter;\n        limiter = this.instances[key] = new this.Bottleneck(Object.assign(this.limiterOptions, {\n          id: `${this.id}-${key}`,\n          timeout: this.timeout,\n          connection: this.connection\n        }));\n        this.Events.trigger(\"created\", limiter, key);\n        return limiter;\n      })();\n    }\n\n    deleteKey(key = \"\") {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var deleted, instance;\n        instance = _this.instances[key];\n\n        if (_this.connection) {\n          deleted = yield _this.connection.__runCommand__(['del', ...Scripts.allKeys(`${_this.id}-${key}`)]);\n        }\n\n        if (instance != null) {\n          delete _this.instances[key];\n          yield instance.disconnect();\n        }\n\n        return instance != null || deleted > 0;\n      })();\n    }\n\n    limiters() {\n      var k, ref, results, v;\n      ref = this.instances;\n      results = [];\n\n      for (k in ref) {\n        v = ref[k];\n        results.push({\n          key: k,\n          limiter: v\n        });\n      }\n\n      return results;\n    }\n\n    keys() {\n      return Object.keys(this.instances);\n    }\n\n    clusterKeys() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var cursor, end, found, i, k, keys, len, next, start;\n\n        if (_this2.connection == null) {\n          return _this2.Promise.resolve(_this2.keys());\n        }\n\n        keys = [];\n        cursor = null;\n        start = `b_${_this2.id}-`.length;\n        end = \"_settings\".length;\n\n        while (cursor !== 0) {\n          var _ref = yield _this2.connection.__runCommand__([\"scan\", cursor != null ? cursor : 0, \"match\", `b_${_this2.id}-*_settings`, \"count\", 10000]);\n\n          var _ref2 = _slicedToArray(_ref, 2);\n\n          next = _ref2[0];\n          found = _ref2[1];\n          cursor = ~~next;\n\n          for (i = 0, len = found.length; i < len; i++) {\n            k = found[i];\n            keys.push(k.slice(start, -end));\n          }\n        }\n\n        return keys;\n      })();\n    }\n\n    _startAutoCleanup() {\n      var _this3 = this;\n\n      var base;\n      clearInterval(this.interval);\n      return typeof (base = this.interval = setInterval(\n      /*#__PURE__*/\n      _asyncToGenerator(function* () {\n        var e, k, ref, results, time, v;\n        time = Date.now();\n        ref = _this3.instances;\n        results = [];\n\n        for (k in ref) {\n          v = ref[k];\n\n          try {\n            if (yield v._store.__groupCheck__(time)) {\n              results.push(_this3.deleteKey(k));\n            } else {\n              results.push(void 0);\n            }\n          } catch (error) {\n            e = error;\n            results.push(v.Events.trigger(\"error\", e));\n          }\n        }\n\n        return results;\n      }), this.timeout / 2)).unref === \"function\" ? base.unref() : void 0;\n    }\n\n    updateSettings(options = {}) {\n      parser.overwrite(options, this.defaults, this);\n      parser.overwrite(options, options, this.limiterOptions);\n\n      if (options.timeout != null) {\n        return this._startAutoCleanup();\n      }\n    }\n\n    disconnect(flush = true) {\n      var ref;\n\n      if (!this.sharedConnection) {\n        return (ref = this.connection) != null ? ref.disconnect(flush) : void 0;\n      }\n    }\n\n  }\n\n  ;\n  Group.prototype.defaults = {\n    timeout: 1000 * 60 * 5,\n    connection: null,\n    Promise: Promise,\n    id: \"group-key\"\n  };\n  return Group;\n}.call(void 0);\n\nmodule.exports = Group;","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Events, IORedisConnection, Scripts, parser;\nparser = require(\"./parser\");\nEvents = require(\"./Events\");\nScripts = require(\"./Scripts\");\n\nIORedisConnection = function () {\n  class IORedisConnection {\n    constructor(options = {}) {\n      parser.load(options, this.defaults, this);\n\n      if (this.Redis == null) {\n        this.Redis = eval(\"require\")(\"ioredis\"); // Obfuscated or else Webpack/Angular will try to inline the optional ioredis module. To override this behavior: pass the ioredis module to Bottleneck as the 'Redis' option.\n      }\n\n      if (this.Events == null) {\n        this.Events = new Events(this);\n      }\n\n      this.terminated = false;\n\n      if (this.clusterNodes != null) {\n        this.client = new this.Redis.Cluster(this.clusterNodes, this.clientOptions);\n        this.subscriber = new this.Redis.Cluster(this.clusterNodes, this.clientOptions);\n      } else if (this.client != null && this.client.duplicate == null) {\n        this.subscriber = new this.Redis.Cluster(this.client.startupNodes, this.client.options);\n      } else {\n        if (this.client == null) {\n          this.client = new this.Redis(this.clientOptions);\n        }\n\n        this.subscriber = this.client.duplicate();\n      }\n\n      this.limiters = {};\n      this.ready = this.Promise.all([this._setup(this.client, false), this._setup(this.subscriber, true)]).then(() => {\n        this._loadScripts();\n\n        return {\n          client: this.client,\n          subscriber: this.subscriber\n        };\n      });\n    }\n\n    _setup(client, sub) {\n      client.setMaxListeners(0);\n      return new this.Promise((resolve, reject) => {\n        client.on(\"error\", e => {\n          return this.Events.trigger(\"error\", e);\n        });\n\n        if (sub) {\n          client.on(\"message\", (channel, message) => {\n            var ref;\n            return (ref = this.limiters[channel]) != null ? ref._store.onMessage(channel, message) : void 0;\n          });\n        }\n\n        if (client.status === \"ready\") {\n          return resolve();\n        } else {\n          return client.once(\"ready\", resolve);\n        }\n      });\n    }\n\n    _loadScripts() {\n      return Scripts.names.forEach(name => {\n        return this.client.defineCommand(name, {\n          lua: Scripts.payload(name)\n        });\n      });\n    }\n\n    __runCommand__(cmd) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var _, deleted;\n\n        yield _this.ready;\n\n        var _ref = yield _this.client.pipeline([cmd]).exec();\n\n        var _ref2 = _slicedToArray(_ref, 1);\n\n        var _ref2$ = _slicedToArray(_ref2[0], 2);\n\n        _ = _ref2$[0];\n        deleted = _ref2$[1];\n        return deleted;\n      })();\n    }\n\n    __addLimiter__(instance) {\n      return this.Promise.all([instance.channel(), instance.channel_client()].map(channel => {\n        return new this.Promise((resolve, reject) => {\n          return this.subscriber.subscribe(channel, () => {\n            this.limiters[channel] = instance;\n            return resolve();\n          });\n        });\n      }));\n    }\n\n    __removeLimiter__(instance) {\n      var _this2 = this;\n\n      return [instance.channel(), instance.channel_client()].forEach(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(function* (channel) {\n          if (!_this2.terminated) {\n            yield _this2.subscriber.unsubscribe(channel);\n          }\n\n          return delete _this2.limiters[channel];\n        });\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n\n    __scriptArgs__(name, id, args, cb) {\n      var keys;\n      keys = Scripts.keys(name, id);\n      return [keys.length].concat(keys, args, cb);\n    }\n\n    __scriptFn__(name) {\n      return this.client[name].bind(this.client);\n    }\n\n    disconnect(flush = true) {\n      var i, k, len, ref;\n      ref = Object.keys(this.limiters);\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        k = ref[i];\n        clearInterval(this.limiters[k]._store.heartbeat);\n      }\n\n      this.limiters = {};\n      this.terminated = true;\n\n      if (flush) {\n        return this.Promise.all([this.client.quit(), this.subscriber.quit()]);\n      } else {\n        this.client.disconnect();\n        this.subscriber.disconnect();\n        return this.Promise.resolve();\n      }\n    }\n\n  }\n\n  ;\n  IORedisConnection.prototype.datastore = \"ioredis\";\n  IORedisConnection.prototype.defaults = {\n    Redis: null,\n    clientOptions: {},\n    clusterNodes: null,\n    client: null,\n    Promise: Promise,\n    Events: null\n  };\n  return IORedisConnection;\n}.call(void 0);\n\nmodule.exports = IORedisConnection;","\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar BottleneckError, DEFAULT_PRIORITY, Job, NUM_PRIORITIES, parser;\nNUM_PRIORITIES = 10;\nDEFAULT_PRIORITY = 5;\nparser = require(\"./parser\");\nBottleneckError = require(\"./BottleneckError\");\nJob = class Job {\n  constructor(task, args, options, jobDefaults, rejectOnDrop, Events, _states, Promise) {\n    this.task = task;\n    this.args = args;\n    this.rejectOnDrop = rejectOnDrop;\n    this.Events = Events;\n    this._states = _states;\n    this.Promise = Promise;\n    this.options = parser.load(options, jobDefaults);\n    this.options.priority = this._sanitizePriority(this.options.priority);\n\n    if (this.options.id === jobDefaults.id) {\n      this.options.id = `${this.options.id}-${this._randomIndex()}`;\n    }\n\n    this.promise = new this.Promise((_resolve, _reject) => {\n      this._resolve = _resolve;\n      this._reject = _reject;\n    });\n    this.retryCount = 0;\n  }\n\n  _sanitizePriority(priority) {\n    var sProperty;\n    sProperty = ~~priority !== priority ? DEFAULT_PRIORITY : priority;\n\n    if (sProperty < 0) {\n      return 0;\n    } else if (sProperty > NUM_PRIORITIES - 1) {\n      return NUM_PRIORITIES - 1;\n    } else {\n      return sProperty;\n    }\n  }\n\n  _randomIndex() {\n    return Math.random().toString(36).slice(2);\n  }\n\n  doDrop({\n    error,\n    message = \"This job has been dropped by Bottleneck\"\n  } = {}) {\n    if (this._states.remove(this.options.id)) {\n      if (this.rejectOnDrop) {\n        this._reject(error != null ? error : new BottleneckError(message));\n      }\n\n      this.Events.trigger(\"dropped\", {\n        args: this.args,\n        options: this.options,\n        task: this.task,\n        promise: this.promise\n      });\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  _assertStatus(expected) {\n    var status;\n    status = this._states.jobStatus(this.options.id);\n\n    if (!(status === expected || expected === \"DONE\" && status === null)) {\n      throw new BottleneckError(`Invalid job status ${status}, expected ${expected}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`);\n    }\n  }\n\n  doReceive() {\n    this._states.start(this.options.id);\n\n    return this.Events.trigger(\"received\", {\n      args: this.args,\n      options: this.options\n    });\n  }\n\n  doQueue(reachedHWM, blocked) {\n    this._assertStatus(\"RECEIVED\");\n\n    this._states.next(this.options.id);\n\n    return this.Events.trigger(\"queued\", {\n      args: this.args,\n      options: this.options,\n      reachedHWM,\n      blocked\n    });\n  }\n\n  doRun() {\n    if (this.retryCount === 0) {\n      this._assertStatus(\"QUEUED\");\n\n      this._states.next(this.options.id);\n    } else {\n      this._assertStatus(\"EXECUTING\");\n    }\n\n    return this.Events.trigger(\"scheduled\", {\n      args: this.args,\n      options: this.options\n    });\n  }\n\n  doExecute(chained, clearGlobalState, run, free) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var error, eventInfo, passed;\n\n      if (_this.retryCount === 0) {\n        _this._assertStatus(\"RUNNING\");\n\n        _this._states.next(_this.options.id);\n      } else {\n        _this._assertStatus(\"EXECUTING\");\n      }\n\n      eventInfo = {\n        args: _this.args,\n        options: _this.options,\n        retryCount: _this.retryCount\n      };\n\n      _this.Events.trigger(\"executing\", eventInfo);\n\n      try {\n        passed = yield chained != null ? chained.schedule(_this.options, _this.task, ..._this.args) : _this.task(..._this.args);\n\n        if (clearGlobalState()) {\n          _this.doDone(eventInfo);\n\n          yield free(_this.options, eventInfo);\n\n          _this._assertStatus(\"DONE\");\n\n          return _this._resolve(passed);\n        }\n      } catch (error1) {\n        error = error1;\n        return _this._onFailure(error, eventInfo, clearGlobalState, run, free);\n      }\n    })();\n  }\n\n  doExpire(clearGlobalState, run, free) {\n    var error, eventInfo;\n\n    if (this._states.jobStatus(this.options.id === \"RUNNING\")) {\n      this._states.next(this.options.id);\n    }\n\n    this._assertStatus(\"EXECUTING\");\n\n    eventInfo = {\n      args: this.args,\n      options: this.options,\n      retryCount: this.retryCount\n    };\n    error = new BottleneckError(`This job timed out after ${this.options.expiration} ms.`);\n    return this._onFailure(error, eventInfo, clearGlobalState, run, free);\n  }\n\n  _onFailure(error, eventInfo, clearGlobalState, run, free) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var retry, retryAfter;\n\n      if (clearGlobalState()) {\n        retry = yield _this2.Events.trigger(\"failed\", error, eventInfo);\n\n        if (retry != null) {\n          retryAfter = ~~retry;\n\n          _this2.Events.trigger(\"retry\", `Retrying ${_this2.options.id} after ${retryAfter} ms`, eventInfo);\n\n          _this2.retryCount++;\n          return run(retryAfter);\n        } else {\n          _this2.doDone(eventInfo);\n\n          yield free(_this2.options, eventInfo);\n\n          _this2._assertStatus(\"DONE\");\n\n          return _this2._reject(error);\n        }\n      }\n    })();\n  }\n\n  doDone(eventInfo) {\n    this._assertStatus(\"EXECUTING\");\n\n    this._states.next(this.options.id);\n\n    return this.Events.trigger(\"done\", eventInfo);\n  }\n\n};\nmodule.exports = Job;","\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar BottleneckError, LocalDatastore, parser;\nparser = require(\"./parser\");\nBottleneckError = require(\"./BottleneckError\");\nLocalDatastore = class LocalDatastore {\n  constructor(instance, storeOptions, storeInstanceOptions) {\n    this.instance = instance;\n    this.storeOptions = storeOptions;\n    this.clientId = this.instance._randomIndex();\n    parser.load(storeInstanceOptions, storeInstanceOptions, this);\n    this._nextRequest = this._lastReservoirRefresh = this._lastReservoirIncrease = Date.now();\n    this._running = 0;\n    this._done = 0;\n    this._unblockTime = 0;\n    this.ready = this.Promise.resolve();\n    this.clients = {};\n\n    this._startHeartbeat();\n  }\n\n  _startHeartbeat() {\n    var base;\n\n    if (this.heartbeat == null && (this.storeOptions.reservoirRefreshInterval != null && this.storeOptions.reservoirRefreshAmount != null || this.storeOptions.reservoirIncreaseInterval != null && this.storeOptions.reservoirIncreaseAmount != null)) {\n      return typeof (base = this.heartbeat = setInterval(() => {\n        var amount, incr, maximum, now, reservoir;\n        now = Date.now();\n\n        if (this.storeOptions.reservoirRefreshInterval != null && now >= this._lastReservoirRefresh + this.storeOptions.reservoirRefreshInterval) {\n          this._lastReservoirRefresh = now;\n          this.storeOptions.reservoir = this.storeOptions.reservoirRefreshAmount;\n\n          this.instance._drainAll(this.computeCapacity());\n        }\n\n        if (this.storeOptions.reservoirIncreaseInterval != null && now >= this._lastReservoirIncrease + this.storeOptions.reservoirIncreaseInterval) {\n          var _this$storeOptions = this.storeOptions;\n          amount = _this$storeOptions.reservoirIncreaseAmount;\n          maximum = _this$storeOptions.reservoirIncreaseMaximum;\n          reservoir = _this$storeOptions.reservoir;\n          this._lastReservoirIncrease = now;\n          incr = maximum != null ? Math.min(amount, maximum - reservoir) : amount;\n\n          if (incr > 0) {\n            this.storeOptions.reservoir += incr;\n            return this.instance._drainAll(this.computeCapacity());\n          }\n        }\n      }, this.heartbeatInterval)).unref === \"function\" ? base.unref() : void 0;\n    } else {\n      return clearInterval(this.heartbeat);\n    }\n  }\n\n  __publish__(message) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.yieldLoop();\n      return _this.instance.Events.trigger(\"message\", message.toString());\n    })();\n  }\n\n  __disconnect__(flush) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.yieldLoop();\n      clearInterval(_this2.heartbeat);\n      return _this2.Promise.resolve();\n    })();\n  }\n\n  yieldLoop(t = 0) {\n    return new this.Promise(function (resolve, reject) {\n      return setTimeout(resolve, t);\n    });\n  }\n\n  computePenalty() {\n    var ref;\n    return (ref = this.storeOptions.penalty) != null ? ref : 15 * this.storeOptions.minTime || 5000;\n  }\n\n  __updateSettings__(options) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.yieldLoop();\n      parser.overwrite(options, options, _this3.storeOptions);\n\n      _this3._startHeartbeat();\n\n      _this3.instance._drainAll(_this3.computeCapacity());\n\n      return true;\n    })();\n  }\n\n  __running__() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.yieldLoop();\n      return _this4._running;\n    })();\n  }\n\n  __queued__() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this5.yieldLoop();\n      return _this5.instance.queued();\n    })();\n  }\n\n  __done__() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this6.yieldLoop();\n      return _this6._done;\n    })();\n  }\n\n  __groupCheck__(time) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this7.yieldLoop();\n      return _this7._nextRequest + _this7.timeout < time;\n    })();\n  }\n\n  computeCapacity() {\n    var maxConcurrent, reservoir;\n    var _this$storeOptions2 = this.storeOptions;\n    maxConcurrent = _this$storeOptions2.maxConcurrent;\n    reservoir = _this$storeOptions2.reservoir;\n\n    if (maxConcurrent != null && reservoir != null) {\n      return Math.min(maxConcurrent - this._running, reservoir);\n    } else if (maxConcurrent != null) {\n      return maxConcurrent - this._running;\n    } else if (reservoir != null) {\n      return reservoir;\n    } else {\n      return null;\n    }\n  }\n\n  conditionsCheck(weight) {\n    var capacity;\n    capacity = this.computeCapacity();\n    return capacity == null || weight <= capacity;\n  }\n\n  __incrementReservoir__(incr) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      var reservoir;\n      yield _this8.yieldLoop();\n      reservoir = _this8.storeOptions.reservoir += incr;\n\n      _this8.instance._drainAll(_this8.computeCapacity());\n\n      return reservoir;\n    })();\n  }\n\n  __currentReservoir__() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this9.yieldLoop();\n      return _this9.storeOptions.reservoir;\n    })();\n  }\n\n  isBlocked(now) {\n    return this._unblockTime >= now;\n  }\n\n  check(weight, now) {\n    return this.conditionsCheck(weight) && this._nextRequest - now <= 0;\n  }\n\n  __check__(weight) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      var now;\n      yield _this10.yieldLoop();\n      now = Date.now();\n      return _this10.check(weight, now);\n    })();\n  }\n\n  __register__(index, weight, expiration) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      var now, wait;\n      yield _this11.yieldLoop();\n      now = Date.now();\n\n      if (_this11.conditionsCheck(weight)) {\n        _this11._running += weight;\n\n        if (_this11.storeOptions.reservoir != null) {\n          _this11.storeOptions.reservoir -= weight;\n        }\n\n        wait = Math.max(_this11._nextRequest - now, 0);\n        _this11._nextRequest = now + wait + _this11.storeOptions.minTime;\n        return {\n          success: true,\n          wait,\n          reservoir: _this11.storeOptions.reservoir\n        };\n      } else {\n        return {\n          success: false\n        };\n      }\n    })();\n  }\n\n  strategyIsBlock() {\n    return this.storeOptions.strategy === 3;\n  }\n\n  __submit__(queueLength, weight) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      var blocked, now, reachedHWM;\n      yield _this12.yieldLoop();\n\n      if (_this12.storeOptions.maxConcurrent != null && weight > _this12.storeOptions.maxConcurrent) {\n        throw new BottleneckError(`Impossible to add a job having a weight of ${weight} to a limiter having a maxConcurrent setting of ${_this12.storeOptions.maxConcurrent}`);\n      }\n\n      now = Date.now();\n      reachedHWM = _this12.storeOptions.highWater != null && queueLength === _this12.storeOptions.highWater && !_this12.check(weight, now);\n      blocked = _this12.strategyIsBlock() && (reachedHWM || _this12.isBlocked(now));\n\n      if (blocked) {\n        _this12._unblockTime = now + _this12.computePenalty();\n        _this12._nextRequest = _this12._unblockTime + _this12.storeOptions.minTime;\n\n        _this12.instance._dropAllQueued();\n      }\n\n      return {\n        reachedHWM,\n        blocked,\n        strategy: _this12.storeOptions.strategy\n      };\n    })();\n  }\n\n  __free__(index, weight) {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this13.yieldLoop();\n      _this13._running -= weight;\n      _this13._done += weight;\n\n      _this13.instance._drainAll(_this13.computeCapacity());\n\n      return {\n        running: _this13._running\n      };\n    })();\n  }\n\n};\nmodule.exports = LocalDatastore;","\"use strict\";\n\nvar DLList, Events, Queues;\nDLList = require(\"./DLList\");\nEvents = require(\"./Events\");\nQueues = class Queues {\n  constructor(num_priorities) {\n    var i;\n    this.Events = new Events(this);\n    this._length = 0;\n\n    this._lists = function () {\n      var j, ref, results;\n      results = [];\n\n      for (i = j = 1, ref = num_priorities; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {\n        results.push(new DLList(() => {\n          return this.incr();\n        }, () => {\n          return this.decr();\n        }));\n      }\n\n      return results;\n    }.call(this);\n  }\n\n  incr() {\n    if (this._length++ === 0) {\n      return this.Events.trigger(\"leftzero\");\n    }\n  }\n\n  decr() {\n    if (--this._length === 0) {\n      return this.Events.trigger(\"zero\");\n    }\n  }\n\n  push(job) {\n    return this._lists[job.options.priority].push(job);\n  }\n\n  queued(priority) {\n    if (priority != null) {\n      return this._lists[priority].length;\n    } else {\n      return this._length;\n    }\n  }\n\n  shiftAll(fn) {\n    return this._lists.forEach(function (list) {\n      return list.forEachShift(fn);\n    });\n  }\n\n  getFirst(arr = this._lists) {\n    var j, len, list;\n\n    for (j = 0, len = arr.length; j < len; j++) {\n      list = arr[j];\n\n      if (list.length > 0) {\n        return list;\n      }\n    }\n\n    return [];\n  }\n\n  shiftLastFrom(priority) {\n    return this.getFirst(this._lists.slice(priority).reverse()).shift();\n  }\n\n};\nmodule.exports = Queues;","\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Events, RedisConnection, Scripts, parser;\nparser = require(\"./parser\");\nEvents = require(\"./Events\");\nScripts = require(\"./Scripts\");\n\nRedisConnection = function () {\n  class RedisConnection {\n    constructor(options = {}) {\n      parser.load(options, this.defaults, this);\n\n      if (this.Redis == null) {\n        this.Redis = eval(\"require\")(\"redis\"); // Obfuscated or else Webpack/Angular will try to inline the optional redis module. To override this behavior: pass the redis module to Bottleneck as the 'Redis' option.\n      }\n\n      if (this.Events == null) {\n        this.Events = new Events(this);\n      }\n\n      this.terminated = false;\n\n      if (this.client == null) {\n        this.client = this.Redis.createClient(this.clientOptions);\n      }\n\n      this.subscriber = this.client.duplicate();\n      this.limiters = {};\n      this.shas = {};\n      this.ready = this.Promise.all([this._setup(this.client, false), this._setup(this.subscriber, true)]).then(() => {\n        return this._loadScripts();\n      }).then(() => {\n        return {\n          client: this.client,\n          subscriber: this.subscriber\n        };\n      });\n    }\n\n    _setup(client, sub) {\n      client.setMaxListeners(0);\n      return new this.Promise((resolve, reject) => {\n        client.on(\"error\", e => {\n          return this.Events.trigger(\"error\", e);\n        });\n\n        if (sub) {\n          client.on(\"message\", (channel, message) => {\n            var ref;\n            return (ref = this.limiters[channel]) != null ? ref._store.onMessage(channel, message) : void 0;\n          });\n        }\n\n        if (client.ready) {\n          return resolve();\n        } else {\n          return client.once(\"ready\", resolve);\n        }\n      });\n    }\n\n    _loadScript(name) {\n      return new this.Promise((resolve, reject) => {\n        var payload;\n        payload = Scripts.payload(name);\n        return this.client.multi([[\"script\", \"load\", payload]]).exec((err, replies) => {\n          if (err != null) {\n            return reject(err);\n          }\n\n          this.shas[name] = replies[0];\n          return resolve(replies[0]);\n        });\n      });\n    }\n\n    _loadScripts() {\n      return this.Promise.all(Scripts.names.map(k => {\n        return this._loadScript(k);\n      }));\n    }\n\n    __runCommand__(cmd) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this.ready;\n        return new _this.Promise((resolve, reject) => {\n          return _this.client.multi([cmd]).exec_atomic(function (err, replies) {\n            if (err != null) {\n              return reject(err);\n            } else {\n              return resolve(replies[0]);\n            }\n          });\n        });\n      })();\n    }\n\n    __addLimiter__(instance) {\n      return this.Promise.all([instance.channel(), instance.channel_client()].map(channel => {\n        return new this.Promise((resolve, reject) => {\n          var handler;\n\n          handler = chan => {\n            if (chan === channel) {\n              this.subscriber.removeListener(\"subscribe\", handler);\n              this.limiters[channel] = instance;\n              return resolve();\n            }\n          };\n\n          this.subscriber.on(\"subscribe\", handler);\n          return this.subscriber.subscribe(channel);\n        });\n      }));\n    }\n\n    __removeLimiter__(instance) {\n      var _this2 = this;\n\n      return this.Promise.all([instance.channel(), instance.channel_client()].map(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(function* (channel) {\n          if (!_this2.terminated) {\n            yield new _this2.Promise((resolve, reject) => {\n              return _this2.subscriber.unsubscribe(channel, function (err, chan) {\n                if (err != null) {\n                  return reject(err);\n                }\n\n                if (chan === channel) {\n                  return resolve();\n                }\n              });\n            });\n          }\n\n          return delete _this2.limiters[channel];\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n    }\n\n    __scriptArgs__(name, id, args, cb) {\n      var keys;\n      keys = Scripts.keys(name, id);\n      return [this.shas[name], keys.length].concat(keys, args, cb);\n    }\n\n    __scriptFn__(name) {\n      return this.client.evalsha.bind(this.client);\n    }\n\n    disconnect(flush = true) {\n      var i, k, len, ref;\n      ref = Object.keys(this.limiters);\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        k = ref[i];\n        clearInterval(this.limiters[k]._store.heartbeat);\n      }\n\n      this.limiters = {};\n      this.terminated = true;\n      this.client.end(flush);\n      this.subscriber.end(flush);\n      return this.Promise.resolve();\n    }\n\n  }\n\n  ;\n  RedisConnection.prototype.datastore = \"redis\";\n  RedisConnection.prototype.defaults = {\n    Redis: null,\n    clientOptions: {},\n    client: null,\n    Promise: Promise,\n    Events: null\n  };\n  return RedisConnection;\n}.call(void 0);\n\nmodule.exports = RedisConnection;","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar BottleneckError, IORedisConnection, RedisConnection, RedisDatastore, parser;\nparser = require(\"./parser\");\nBottleneckError = require(\"./BottleneckError\");\nRedisConnection = require(\"./RedisConnection\");\nIORedisConnection = require(\"./IORedisConnection\");\nRedisDatastore = class RedisDatastore {\n  constructor(instance, storeOptions, storeInstanceOptions) {\n    this.instance = instance;\n    this.storeOptions = storeOptions;\n    this.originalId = this.instance.id;\n    this.clientId = this.instance._randomIndex();\n    parser.load(storeInstanceOptions, storeInstanceOptions, this);\n    this.clients = {};\n    this.capacityPriorityCounters = {};\n    this.sharedConnection = this.connection != null;\n\n    if (this.connection == null) {\n      this.connection = this.instance.datastore === \"redis\" ? new RedisConnection({\n        Redis: this.Redis,\n        clientOptions: this.clientOptions,\n        Promise: this.Promise,\n        Events: this.instance.Events\n      }) : this.instance.datastore === \"ioredis\" ? new IORedisConnection({\n        Redis: this.Redis,\n        clientOptions: this.clientOptions,\n        clusterNodes: this.clusterNodes,\n        Promise: this.Promise,\n        Events: this.instance.Events\n      }) : void 0;\n    }\n\n    this.instance.connection = this.connection;\n    this.instance.datastore = this.connection.datastore;\n    this.ready = this.connection.ready.then(clients => {\n      this.clients = clients;\n      return this.runScript(\"init\", this.prepareInitSettings(this.clearDatastore));\n    }).then(() => {\n      return this.connection.__addLimiter__(this.instance);\n    }).then(() => {\n      return this.runScript(\"register_client\", [this.instance.queued()]);\n    }).then(() => {\n      var base;\n\n      if (typeof (base = this.heartbeat = setInterval(() => {\n        return this.runScript(\"heartbeat\", []).catch(e => {\n          return this.instance.Events.trigger(\"error\", e);\n        });\n      }, this.heartbeatInterval)).unref === \"function\") {\n        base.unref();\n      }\n\n      return this.clients;\n    });\n  }\n\n  __publish__(message) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var client;\n\n      var _ref = yield _this.ready;\n\n      client = _ref.client;\n      return client.publish(_this.instance.channel(), `message:${message.toString()}`);\n    })();\n  }\n\n  onMessage(channel, message) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var capacity, counter, data, drained, e, newCapacity, pos, priorityClient, rawCapacity, type;\n\n      try {\n        pos = message.indexOf(\":\");\n        var _ref2 = [message.slice(0, pos), message.slice(pos + 1)];\n        type = _ref2[0];\n        data = _ref2[1];\n\n        if (type === \"capacity\") {\n          return yield _this2.instance._drainAll(data.length > 0 ? ~~data : void 0);\n        } else if (type === \"capacity-priority\") {\n          var _data$split = data.split(\":\");\n\n          var _data$split2 = _slicedToArray(_data$split, 3);\n\n          rawCapacity = _data$split2[0];\n          priorityClient = _data$split2[1];\n          counter = _data$split2[2];\n          capacity = rawCapacity.length > 0 ? ~~rawCapacity : void 0;\n\n          if (priorityClient === _this2.clientId) {\n            drained = yield _this2.instance._drainAll(capacity);\n            newCapacity = capacity != null ? capacity - (drained || 0) : \"\";\n            return yield _this2.clients.client.publish(_this2.instance.channel(), `capacity-priority:${newCapacity}::${counter}`);\n          } else if (priorityClient === \"\") {\n            clearTimeout(_this2.capacityPriorityCounters[counter]);\n            delete _this2.capacityPriorityCounters[counter];\n            return _this2.instance._drainAll(capacity);\n          } else {\n            return _this2.capacityPriorityCounters[counter] = setTimeout(\n            /*#__PURE__*/\n            _asyncToGenerator(function* () {\n              var e;\n\n              try {\n                delete _this2.capacityPriorityCounters[counter];\n                yield _this2.runScript(\"blacklist_client\", [priorityClient]);\n                return yield _this2.instance._drainAll(capacity);\n              } catch (error) {\n                e = error;\n                return _this2.instance.Events.trigger(\"error\", e);\n              }\n            }), 1000);\n          }\n        } else if (type === \"message\") {\n          return _this2.instance.Events.trigger(\"message\", data);\n        } else if (type === \"blocked\") {\n          return yield _this2.instance._dropAllQueued();\n        }\n      } catch (error) {\n        e = error;\n        return _this2.instance.Events.trigger(\"error\", e);\n      }\n    })();\n  }\n\n  __disconnect__(flush) {\n    clearInterval(this.heartbeat);\n\n    if (this.sharedConnection) {\n      return this.connection.__removeLimiter__(this.instance);\n    } else {\n      return this.connection.disconnect(flush);\n    }\n  }\n\n  runScript(name, args) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!(name === \"init\" || name === \"register_client\")) {\n        yield _this3.ready;\n      }\n\n      return new _this3.Promise((resolve, reject) => {\n        var all_args, arr;\n        all_args = [Date.now(), _this3.clientId].concat(args);\n\n        _this3.instance.Events.trigger(\"debug\", `Calling Redis script: ${name}.lua`, all_args);\n\n        arr = _this3.connection.__scriptArgs__(name, _this3.originalId, all_args, function (err, replies) {\n          if (err != null) {\n            return reject(err);\n          }\n\n          return resolve(replies);\n        });\n        return _this3.connection.__scriptFn__(name)(...arr);\n      }).catch(e => {\n        if (e.message === \"SETTINGS_KEY_NOT_FOUND\") {\n          if (name === \"heartbeat\") {\n            return _this3.Promise.resolve();\n          } else {\n            return _this3.runScript(\"init\", _this3.prepareInitSettings(false)).then(() => {\n              return _this3.runScript(name, args);\n            });\n          }\n        } else if (e.message === \"UNKNOWN_CLIENT\") {\n          return _this3.runScript(\"register_client\", [_this3.instance.queued()]).then(() => {\n            return _this3.runScript(name, args);\n          });\n        } else {\n          return _this3.Promise.reject(e);\n        }\n      });\n    })();\n  }\n\n  prepareArray(arr) {\n    var i, len, results, x;\n    results = [];\n\n    for (i = 0, len = arr.length; i < len; i++) {\n      x = arr[i];\n      results.push(x != null ? x.toString() : \"\");\n    }\n\n    return results;\n  }\n\n  prepareObject(obj) {\n    var arr, k, v;\n    arr = [];\n\n    for (k in obj) {\n      v = obj[k];\n      arr.push(k, v != null ? v.toString() : \"\");\n    }\n\n    return arr;\n  }\n\n  prepareInitSettings(clear) {\n    var args;\n    args = this.prepareObject(Object.assign({}, this.storeOptions, {\n      id: this.originalId,\n      version: this.instance.version,\n      groupTimeout: this.timeout,\n      clientTimeout: this.clientTimeout\n    }));\n    args.unshift(clear ? 1 : 0, this.instance.version);\n    return args;\n  }\n\n  convertBool(b) {\n    return !!b;\n  }\n\n  __updateSettings__(options) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.runScript(\"update_settings\", _this4.prepareObject(options));\n      return parser.overwrite(options, options, _this4.storeOptions);\n    })();\n  }\n\n  __running__() {\n    return this.runScript(\"running\", []);\n  }\n\n  __queued__() {\n    return this.runScript(\"queued\", []);\n  }\n\n  __done__() {\n    return this.runScript(\"done\", []);\n  }\n\n  __groupCheck__() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this5.convertBool((yield _this5.runScript(\"group_check\", [])));\n    })();\n  }\n\n  __incrementReservoir__(incr) {\n    return this.runScript(\"increment_reservoir\", [incr]);\n  }\n\n  __currentReservoir__() {\n    return this.runScript(\"current_reservoir\", []);\n  }\n\n  __check__(weight) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this6.convertBool((yield _this6.runScript(\"check\", _this6.prepareArray([weight]))));\n    })();\n  }\n\n  __register__(index, weight, expiration) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var reservoir, success, wait;\n\n      var _ref4 = yield _this7.runScript(\"register\", _this7.prepareArray([index, weight, expiration]));\n\n      var _ref5 = _slicedToArray(_ref4, 3);\n\n      success = _ref5[0];\n      wait = _ref5[1];\n      reservoir = _ref5[2];\n      return {\n        success: _this7.convertBool(success),\n        wait,\n        reservoir\n      };\n    })();\n  }\n\n  __submit__(queueLength, weight) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      var blocked, e, maxConcurrent, overweight, reachedHWM, strategy;\n\n      try {\n        var _ref6 = yield _this8.runScript(\"submit\", _this8.prepareArray([queueLength, weight]));\n\n        var _ref7 = _slicedToArray(_ref6, 3);\n\n        reachedHWM = _ref7[0];\n        blocked = _ref7[1];\n        strategy = _ref7[2];\n        return {\n          reachedHWM: _this8.convertBool(reachedHWM),\n          blocked: _this8.convertBool(blocked),\n          strategy\n        };\n      } catch (error) {\n        e = error;\n\n        if (e.message.indexOf(\"OVERWEIGHT\") === 0) {\n          var _e$message$split = e.message.split(\":\");\n\n          var _e$message$split2 = _slicedToArray(_e$message$split, 3);\n\n          overweight = _e$message$split2[0];\n          weight = _e$message$split2[1];\n          maxConcurrent = _e$message$split2[2];\n          throw new BottleneckError(`Impossible to add a job having a weight of ${weight} to a limiter having a maxConcurrent setting of ${maxConcurrent}`);\n        } else {\n          throw e;\n        }\n      }\n    })();\n  }\n\n  __free__(index, weight) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      var running;\n      running = yield _this9.runScript(\"free\", _this9.prepareArray([index]));\n      return {\n        running\n      };\n    })();\n  }\n\n};\nmodule.exports = RedisDatastore;","\"use strict\";\n\nvar headers, lua, templates;\nlua = require(\"./lua.json\");\nheaders = {\n  refs: lua[\"refs.lua\"],\n  validate_keys: lua[\"validate_keys.lua\"],\n  validate_client: lua[\"validate_client.lua\"],\n  refresh_expiration: lua[\"refresh_expiration.lua\"],\n  process_tick: lua[\"process_tick.lua\"],\n  conditions_check: lua[\"conditions_check.lua\"],\n  get_time: lua[\"get_time.lua\"]\n};\n\nexports.allKeys = function (id) {\n  return [\n  /*\n  HASH\n  */\n  `b_${id}_settings`,\n  /*\n  HASH\n  job index -> weight\n  */\n  `b_${id}_job_weights`,\n  /*\n  ZSET\n  job index -> expiration\n  */\n  `b_${id}_job_expirations`,\n  /*\n  HASH\n  job index -> client\n  */\n  `b_${id}_job_clients`,\n  /*\n  ZSET\n  client -> sum running\n  */\n  `b_${id}_client_running`,\n  /*\n  HASH\n  client -> num queued\n  */\n  `b_${id}_client_num_queued`,\n  /*\n  ZSET\n  client -> last job registered\n  */\n  `b_${id}_client_last_registered`,\n  /*\n  ZSET\n  client -> last seen\n  */\n  `b_${id}_client_last_seen`];\n};\n\ntemplates = {\n  init: {\n    keys: exports.allKeys,\n    headers: [\"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"init.lua\"]\n  },\n  group_check: {\n    keys: exports.allKeys,\n    headers: [],\n    refresh_expiration: false,\n    code: lua[\"group_check.lua\"]\n  },\n  register_client: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\"],\n    refresh_expiration: false,\n    code: lua[\"register_client.lua\"]\n  },\n  blacklist_client: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\"],\n    refresh_expiration: false,\n    code: lua[\"blacklist_client.lua\"]\n  },\n  heartbeat: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"heartbeat.lua\"]\n  },\n  update_settings: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"update_settings.lua\"]\n  },\n  running: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"running.lua\"]\n  },\n  queued: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\"],\n    refresh_expiration: false,\n    code: lua[\"queued.lua\"]\n  },\n  done: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"done.lua\"]\n  },\n  check: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: false,\n    code: lua[\"check.lua\"]\n  },\n  submit: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: true,\n    code: lua[\"submit.lua\"]\n  },\n  register: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\", \"conditions_check\"],\n    refresh_expiration: true,\n    code: lua[\"register.lua\"]\n  },\n  free: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"free.lua\"]\n  },\n  current_reservoir: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: false,\n    code: lua[\"current_reservoir.lua\"]\n  },\n  increment_reservoir: {\n    keys: exports.allKeys,\n    headers: [\"validate_keys\", \"validate_client\", \"process_tick\"],\n    refresh_expiration: true,\n    code: lua[\"increment_reservoir.lua\"]\n  }\n};\nexports.names = Object.keys(templates);\n\nexports.keys = function (name, id) {\n  return templates[name].keys(id);\n};\n\nexports.payload = function (name) {\n  var template;\n  template = templates[name];\n  return Array.prototype.concat(headers.refs, template.headers.map(function (h) {\n    return headers[h];\n  }), template.refresh_expiration ? headers.refresh_expiration : \"\", template.code).join(\"\\n\");\n};","\"use strict\";\n\nvar BottleneckError, States;\nBottleneckError = require(\"./BottleneckError\");\nStates = class States {\n  constructor(status1) {\n    this.status = status1;\n    this._jobs = {};\n    this.counts = this.status.map(function () {\n      return 0;\n    });\n  }\n\n  next(id) {\n    var current, next;\n    current = this._jobs[id];\n    next = current + 1;\n\n    if (current != null && next < this.status.length) {\n      this.counts[current]--;\n      this.counts[next]++;\n      return this._jobs[id]++;\n    } else if (current != null) {\n      this.counts[current]--;\n      return delete this._jobs[id];\n    }\n  }\n\n  start(id) {\n    var initial;\n    initial = 0;\n    this._jobs[id] = initial;\n    return this.counts[initial]++;\n  }\n\n  remove(id) {\n    var current;\n    current = this._jobs[id];\n\n    if (current != null) {\n      this.counts[current]--;\n      delete this._jobs[id];\n    }\n\n    return current != null;\n  }\n\n  jobStatus(id) {\n    var ref;\n    return (ref = this.status[this._jobs[id]]) != null ? ref : null;\n  }\n\n  statusJobs(status) {\n    var k, pos, ref, results, v;\n\n    if (status != null) {\n      pos = this.status.indexOf(status);\n\n      if (pos < 0) {\n        throw new BottleneckError(`status must be one of ${this.status.join(', ')}`);\n      }\n\n      ref = this._jobs;\n      results = [];\n\n      for (k in ref) {\n        v = ref[k];\n\n        if (v === pos) {\n          results.push(k);\n        }\n      }\n\n      return results;\n    } else {\n      return Object.keys(this._jobs);\n    }\n  }\n\n  statusCounts() {\n    return this.counts.reduce((acc, v, i) => {\n      acc[this.status[i]] = v;\n      return acc;\n    }, {});\n  }\n\n};\nmodule.exports = States;","\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar DLList, Sync;\nDLList = require(\"./DLList\");\nSync = class Sync {\n  constructor(name, Promise) {\n    this.schedule = this.schedule.bind(this);\n    this.name = name;\n    this.Promise = Promise;\n    this._running = 0;\n    this._queue = new DLList();\n  }\n\n  isEmpty() {\n    return this._queue.length === 0;\n  }\n\n  _tryToRun() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var args, cb, error, reject, resolve, returned, task;\n\n      if (_this._running < 1 && _this._queue.length > 0) {\n        _this._running++;\n\n        var _this$_queue$shift = _this._queue.shift();\n\n        task = _this$_queue$shift.task;\n        args = _this$_queue$shift.args;\n        resolve = _this$_queue$shift.resolve;\n        reject = _this$_queue$shift.reject;\n        cb = yield _asyncToGenerator(function* () {\n          try {\n            returned = yield task(...args);\n            return function () {\n              return resolve(returned);\n            };\n          } catch (error1) {\n            error = error1;\n            return function () {\n              return reject(error);\n            };\n          }\n        })();\n        _this._running--;\n\n        _this._tryToRun();\n\n        return cb();\n      }\n    })();\n  }\n\n  schedule(task, ...args) {\n    var promise, reject, resolve;\n    resolve = reject = null;\n    promise = new this.Promise(function (_resolve, _reject) {\n      resolve = _resolve;\n      return reject = _reject;\n    });\n\n    this._queue.push({\n      task,\n      args,\n      resolve,\n      reject\n    });\n\n    this._tryToRun();\n\n    return promise;\n  }\n\n};\nmodule.exports = Sync;","\"use strict\";\n\nmodule.exports = require(\"./Bottleneck\");","\"use strict\";\n\nexports.load = function (received, defaults, onto = {}) {\n  var k, ref, v;\n\n  for (k in defaults) {\n    v = defaults[k];\n    onto[k] = (ref = received[k]) != null ? ref : v;\n  }\n\n  return onto;\n};\n\nexports.overwrite = function (received, defaults, onto = {}) {\n  var k, v;\n\n  for (k in received) {\n    v = received[k];\n\n    if (defaults[k] !== void 0) {\n      onto[k] = v;\n    }\n  }\n\n  return onto;\n};","\n    //This file is generated by the build process\n    \nimport { Client, Api, Classes } from '../index';\nimport _ = require('lodash');\n\nexport namespace ClassClients {\n    export class ClassClientBase<T extends Api.RallyObject> {\n        constructor(typeName: string, apiKey: string, options: Api.ClientOptions)\n        constructor(typeName: string,client: Client)\n        constructor(typeName: string, ...params: any[]) {\n            this.typeName = typeName;            \n            if(_.isObject(params[0])){\n                this.client = params[0];\n            }\n            else{\n                this.client = new Client(params[0],params[1]);\n            }\n        }\n        /**\n         * @private\n         */\n        client: Client\n        /**\n         * @private\n         */\n        typeName: string\n        /**\n         * returns an array modified to have additional meta data on it containing the results\n         */\n        async query(type, query: Api.QueryOptions = {}, params = {}):\n            Promise<Api.QueryResponse<T>> {\n            let resp: any = this.client.query(this.typeName, query, params);\n            return resp;\n        }\n\n        /**\n         * Saves the current state of the Rally object to Rally.\n         * Creating a new object on the server if no _ref is provided in rallyObject\n         * @param rallyObject A new or existing Rally object\n         */\n        async save(rallyObject: Partial<T>): Promise<T>\n        async save(\n            rallyObject: Partial<T>,\n            queryOptions: Api.QueryOptions = {}\n        ): Promise<T> {\n            let resp: any =  this.client.save(rallyObject, queryOptions);\n            return resp;\n        }\n\n        /**\n         * Returns a Rally object by ref or by type and ID\n         */\n        async get(typeOrRef: string, objectID = 0, params: Api.QueryOptions = {}): Promise<T> {\n            let resp: any = this.client.get(typeOrRef, objectID, params);\n            return resp;\n        }\n\n        /**\n         * Gets a subcollection stored on the Rally object\n         */\n        async getCollection(rallyObject: T, collectionName: string, params: Api.QueryOptions = {}): Promise<Api.QueryResponse<Api.RallyObject>> {\n            let resp: any = this.client.getCollection(rallyObject, collectionName, params);\n            return resp;\n        }\n\n        /**\n         * \n         * @param  inputOrRef Either a Rally object or the ref for a Rally object\n         * @param  params Optional Params to be sent with the request\n         * @param  ignoreDelay Pass true if you don't want to wait 500 ms longer to return. This time gives the Rally server a chance to finish deleting\n         */\n        async delete(inputOrRef: string | Api.RallyObject, params = {}, ignoreDelay = false) {\n            return this.client.delete(inputOrRef, params, ignoreDelay);\n        }\n    }\n\n\n    \n    export class AllowedAttributeValue extends ClassClientBase<Classes.AllowedAttributeValue> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"AllowedAttributeValue\",client);                \n        }\n    }\n         \n    export class AllowedQueryOperator extends ClassClientBase<Classes.AllowedQueryOperator> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"AllowedQueryOperator\",client);                \n        }\n    }\n         \n    export class App extends ClassClientBase<Classes.App> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"App\",client);                \n        }\n    }\n         \n    export class Artifact extends ClassClientBase<Classes.Artifact> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Artifact\",client);                \n        }\n    }\n         \n    export class ArtifactNotification extends ClassClientBase<Classes.ArtifactNotification> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"ArtifactNotification\",client);                \n        }\n    }\n         \n    export class Attachment extends ClassClientBase<Classes.Attachment> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Attachment\",client);                \n        }\n    }\n         \n    export class AttachmentContent extends ClassClientBase<Classes.AttachmentContent> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"AttachmentContent\",client);                \n        }\n    }\n         \n    export class AttributeDefinition extends ClassClientBase<Classes.AttributeDefinition> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"AttributeDefinition\",client);                \n        }\n    }\n         \n    export class Blocker extends ClassClientBase<Classes.Blocker> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Blocker\",client);                \n        }\n    }\n         \n    export class Build extends ClassClientBase<Classes.Build> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Build\",client);                \n        }\n    }\n         \n    export class BuildDefinition extends ClassClientBase<Classes.BuildDefinition> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"BuildDefinition\",client);                \n        }\n    }\n         \n    export class Change extends ClassClientBase<Classes.Change> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Change\",client);                \n        }\n    }\n         \n    export class Changeset extends ClassClientBase<Classes.Changeset> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Changeset\",client);                \n        }\n    }\n         \n    export class Connection extends ClassClientBase<Classes.Connection> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Connection\",client);                \n        }\n    }\n         \n    export class ConversationPost extends ClassClientBase<Classes.ConversationPost> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"ConversationPost\",client);                \n        }\n    }\n         \n    export class CumulativeFlowData extends ClassClientBase<Classes.CumulativeFlowData> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"CumulativeFlowData\",client);                \n        }\n    }\n         \n    export class Dashboard extends ClassClientBase<Classes.Dashboard> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Dashboard\",client);                \n        }\n    }\n         \n    export class DataMoveRequest extends ClassClientBase<Classes.DataMoveRequest> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"DataMoveRequest\",client);                \n        }\n    }\n         \n    export class Defect extends ClassClientBase<Classes.Defect> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Defect\",client);                \n        }\n    }\n         \n    export class DefectSuite extends ClassClientBase<Classes.DefectSuite> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"DefectSuite\",client);                \n        }\n    }\n         \n    export class DomainObject extends ClassClientBase<Classes.DomainObject> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"DomainObject\",client);                \n        }\n    }\n         \n    export class Feature extends ClassClientBase<Classes.Feature> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Feature\",client);                \n        }\n    }\n         \n    export class FeatureToggleEntity extends ClassClientBase<Classes.FeatureToggleEntity> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"FeatureToggleEntity\",client);                \n        }\n    }\n         \n    export class FlowState extends ClassClientBase<Classes.FlowState> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"FlowState\",client);                \n        }\n    }\n         \n    export class HierarchicalRequirement extends ClassClientBase<Classes.HierarchicalRequirement> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"HierarchicalRequirement\",client);                \n        }\n    }\n         \n    export class HierarchicalRequirementPredecessorRelationship extends ClassClientBase<Classes.HierarchicalRequirementPredecessorRelationship> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"HierarchicalRequirementPredecessorRelationship\",client);                \n        }\n    }\n         \n    export class Initiative extends ClassClientBase<Classes.Initiative> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Initiative\",client);                \n        }\n    }\n         \n    export class Investment extends ClassClientBase<Classes.Investment> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Investment\",client);                \n        }\n    }\n         \n    export class Iteration extends ClassClientBase<Classes.Iteration> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Iteration\",client);                \n        }\n    }\n         \n    export class IterationCumulativeFlowData extends ClassClientBase<Classes.IterationCumulativeFlowData> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"IterationCumulativeFlowData\",client);                \n        }\n    }\n         \n    export class Milestone extends ClassClientBase<Classes.Milestone> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Milestone\",client);                \n        }\n    }\n         \n    export class PPMConnection extends ClassClientBase<Classes.PPMConnection> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"PPMConnection\",client);                \n        }\n    }\n         \n    export class Panel extends ClassClientBase<Classes.Panel> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Panel\",client);                \n        }\n    }\n         \n    export class PanelDefinitionConfigProperty extends ClassClientBase<Classes.PanelDefinitionConfigProperty> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"PanelDefinitionConfigProperty\",client);                \n        }\n    }\n         \n    export class PersistableObject extends ClassClientBase<Classes.PersistableObject> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"PersistableObject\",client);                \n        }\n    }\n         \n    export class PortfolioItem extends ClassClientBase<Classes.PortfolioItem> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"PortfolioItem\",client);                \n        }\n    }\n         \n    export class PortfolioItemPredecessorRelationship extends ClassClientBase<Classes.PortfolioItemPredecessorRelationship> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"PortfolioItemPredecessorRelationship\",client);                \n        }\n    }\n         \n    export class Preference extends ClassClientBase<Classes.Preference> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Preference\",client);                \n        }\n    }\n         \n    export class PreliminaryEstimate extends ClassClientBase<Classes.PreliminaryEstimate> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"PreliminaryEstimate\",client);                \n        }\n    }\n         \n    export class ProfileImage extends ClassClientBase<Classes.ProfileImage> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"ProfileImage\",client);                \n        }\n    }\n         \n    export class Project extends ClassClientBase<Classes.Project> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Project\",client);                \n        }\n    }\n         \n    export class ProjectPermission extends ClassClientBase<Classes.ProjectPermission> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"ProjectPermission\",client);                \n        }\n    }\n         \n    export class PullRequest extends ClassClientBase<Classes.PullRequest> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"PullRequest\",client);                \n        }\n    }\n         \n    export class RankableArtifact extends ClassClientBase<Classes.RankableArtifact> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"RankableArtifact\",client);                \n        }\n    }\n         \n    export class RecycleBinEntry extends ClassClientBase<Classes.RecycleBinEntry> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"RecycleBinEntry\",client);                \n        }\n    }\n         \n    export class Release extends ClassClientBase<Classes.Release> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Release\",client);                \n        }\n    }\n         \n    export class ReleaseCumulativeFlowData extends ClassClientBase<Classes.ReleaseCumulativeFlowData> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"ReleaseCumulativeFlowData\",client);                \n        }\n    }\n         \n    export class Requirement extends ClassClientBase<Classes.Requirement> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Requirement\",client);                \n        }\n    }\n         \n    export class Revision extends ClassClientBase<Classes.Revision> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Revision\",client);                \n        }\n    }\n         \n    export class RevisionHistory extends ClassClientBase<Classes.RevisionHistory> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"RevisionHistory\",client);                \n        }\n    }\n         \n    export class Risk extends ClassClientBase<Classes.Risk> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Risk\",client);                \n        }\n    }\n         \n    export class SCMRepository extends ClassClientBase<Classes.SCMRepository> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"SCMRepository\",client);                \n        }\n    }\n         \n    export class SchedulableArtifact extends ClassClientBase<Classes.SchedulableArtifact> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"SchedulableArtifact\",client);                \n        }\n    }\n         \n    export class ScheduledTestCase extends ClassClientBase<Classes.ScheduledTestCase> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"ScheduledTestCase\",client);                \n        }\n    }\n         \n    export class Scope extends ClassClientBase<Classes.Scope> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Scope\",client);                \n        }\n    }\n         \n    export class ScopedAttributeDefinition extends ClassClientBase<Classes.ScopedAttributeDefinition> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"ScopedAttributeDefinition\",client);                \n        }\n    }\n         \n    export class Slice extends ClassClientBase<Classes.Slice> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Slice\",client);                \n        }\n    }\n         \n    export class State extends ClassClientBase<Classes.State> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"State\",client);                \n        }\n    }\n         \n    export class Subscription extends ClassClientBase<Classes.Subscription> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Subscription\",client);                \n        }\n    }\n         \n    export class SubscriptionTag extends ClassClientBase<Classes.SubscriptionTag> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"SubscriptionTag\",client);                \n        }\n    }\n         \n    export class Tag extends ClassClientBase<Classes.Tag> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Tag\",client);                \n        }\n    }\n         \n    export class Task extends ClassClientBase<Classes.Task> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Task\",client);                \n        }\n    }\n         \n    export class TestCase extends ClassClientBase<Classes.TestCase> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TestCase\",client);                \n        }\n    }\n         \n    export class TestCaseResult extends ClassClientBase<Classes.TestCaseResult> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TestCaseResult\",client);                \n        }\n    }\n         \n    export class TestCaseStep extends ClassClientBase<Classes.TestCaseStep> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TestCaseStep\",client);                \n        }\n    }\n         \n    export class TestFolder extends ClassClientBase<Classes.TestFolder> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TestFolder\",client);                \n        }\n    }\n         \n    export class TestFolderStatus extends ClassClientBase<Classes.TestFolderStatus> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TestFolderStatus\",client);                \n        }\n    }\n         \n    export class TestSet extends ClassClientBase<Classes.TestSet> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TestSet\",client);                \n        }\n    }\n         \n    export class TimeEntryItem extends ClassClientBase<Classes.TimeEntryItem> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TimeEntryItem\",client);                \n        }\n    }\n         \n    export class TimeEntryValue extends ClassClientBase<Classes.TimeEntryValue> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TimeEntryValue\",client);                \n        }\n    }\n         \n    export class TypeDefinition extends ClassClientBase<Classes.TypeDefinition> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"TypeDefinition\",client);                \n        }\n    }\n         \n    export class User extends ClassClientBase<Classes.User> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"User\",client);                \n        }\n    }\n         \n    export class UserIterationCapacity extends ClassClientBase<Classes.UserIterationCapacity> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"UserIterationCapacity\",client);                \n        }\n    }\n         \n    export class UserPermission extends ClassClientBase<Classes.UserPermission> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"UserPermission\",client);                \n        }\n    }\n         \n    export class UserProfile extends ClassClientBase<Classes.UserProfile> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"UserProfile\",client);                \n        }\n    }\n         \n    export class WebLinkDefinition extends ClassClientBase<Classes.WebLinkDefinition> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"WebLinkDefinition\",client);                \n        }\n    }\n         \n    export class WebTab extends ClassClientBase<Classes.WebTab> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"WebTab\",client);                \n        }\n    }\n         \n    export class Workspace extends ClassClientBase<Classes.Workspace> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"Workspace\",client);                \n        }\n    }\n         \n    export class WorkspaceConfiguration extends ClassClientBase<Classes.WorkspaceConfiguration> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"WorkspaceConfiguration\",client);                \n        }\n    }\n         \n    export class WorkspaceDomainObject extends ClassClientBase<Classes.WorkspaceDomainObject> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"WorkspaceDomainObject\",client);                \n        }\n    }\n         \n    export class WorkspacePermission extends ClassClientBase<Classes.WorkspacePermission> {\n        constructor(apiKey: string, options: Api.ClientOptions)\n        constructor(client: Client)\n        constructor(...params: any[]) {\n            const client = _.isObject(params[0])?params[0]:new Client(params[0],params[1]);\n            super(\"WorkspacePermission\",client);                \n        }\n    }\n        \n    }","import * as Toolkit from '../index';\n\nimport f = require('node-fetch');\nimport _ = require('lodash');\nimport urlModule = require('url');\nimport { Ref } from './Ref';\nimport { Throttle } from './Throttle';\nconst fetch: any = f;\nlet inBrowser = false;\n\ntype ResponseData = {\n    ok: any;\n    statusText: any;\n    status: any;\n    json: () => void;\n};\n\nexport class Client {\n    constructor(\n        apiKey: string,\n\n        options: Toolkit.Api.ClientOptions = {\n            server: Client.defaultRallyServer,\n            project: undefined,\n            workspace: undefined,\n            maxConcurrentRequests: 5,\n            maxReadRetrys: 5,\n            maxWriteRetrys: 0\n        }\n    ) {\n        if (!_.isString(apiKey) && !inBrowser) {\n            throw new Error('Api key is required');\n        }\n        this.options = _.defaults(options, {\n            server: Client.defaultRallyServer,\n            project: undefined,\n            workspace: undefined,\n            maxConcurrentRequests: 5,\n            maxReadRetrys: 5,\n            maxWriteRetrys: 0\n        });\n        this.options.server = options.server || Client.defaultRallyServer;\n        this.apiKey = apiKey;\n        this.workspace = options.workspace;\n        this.project = options.project;\n\n        this.throttle = new Throttle(this.options.maxConcurrentRequests);\n    }\n\n    /** @private */\n    apiKey: string;\n    throttle: Toolkit.Throttle;\n    workspace: string;\n    project: string;\n    options: Toolkit.Api.ClientOptions;\n\n    /**\n     * The default Rally server Rally to be used\n     */\n    static get defaultRallyServer() {\n        return 'https://rally1.rallydev.com';\n    }\n\n    /** The default server for Rally to be used*/\n    static async manageResponse(response: ResponseData) {\n        if (!response.ok) {\n            throw new Error(`${response.statusText} Code:${response.status}`);\n        }\n        const resp: any = await response.json();\n        const unwrappedResponse = resp[_.keys(resp)[0]] || '';\n        const errors = unwrappedResponse.Errors || resp.Errors;\n        if (errors && errors.length) {\n            throw new Error(errors.map((e: any) => `Rally Server Error: ${e}`).join(','));\n        }\n        let returnedValue = resp;\n        if (resp.QueryResult) {\n            returnedValue = resp.QueryResult.Results;\n            resp.TotalResultCount = resp.QueryResult.TotalResultCount;\n            resp.PageSize = resp.QueryResult.PageSize;\n            delete resp.QueryResult;\n        } else if (resp.Results) {\n            returnedValue = resp.Results;\n            delete resp.Results;\n        } else if (unwrappedResponse.Object) {\n            returnedValue = unwrappedResponse.Object;\n            delete resp.Object;\n        }\n        returnedValue.$rawResponse = resp;\n        return returnedValue;\n    }\n\n    /** Returns a collection of results from the Lookback Api */\n    async queryLookback(request: Toolkit.Api.Lookback.Request, workspaceId = 0): Promise<Toolkit.Api.Lookback.Response> {\n        const workspace = workspaceId ? `/workspace/${workspaceId}` : this.workspace;\n        const url = `${this.options.server}/analytics/v2.0/service/rally${workspace}/artifact/snapshot/query`;\n        const finalParams = _.defaults(request, Client.defaultLookbackRequest);\n        let headers: any = {};\n        if (this.apiKey) {\n            headers.zsessionid = this.apiKey;\n        }\n        const body = JSON.stringify(request, null, 2);\n        const resp = await this.throttle.queueAction(async () => {\n            const rawResponse = await fetch(\n                url,\n                {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers,\n                    credentials: 'include',\n                    body\n                },\n                this.options.maxReadRetrys\n            );\n            /** @type {Promise<Toolkit.Api.Lookback.Response>} */\n            return await Client.manageResponse(rawResponse);\n        }, this.options.maxReadRetrys);\n        resp.$params = finalParams;\n        resp.$hasMore = resp.$rawResponse.HasMore;\n        const firstRawResponse = resp.$rawResponse;\n        resp.$getNextPage = async () => {\n            if (resp.$hasMore) {\n                const newRequest = _.cloneDeep(request);\n                newRequest.start += newRequest.pagesize;\n                return this.queryLookback(newRequest, workspaceId);\n            } else {\n                throw new Error('No more pages in this request');\n            }\n        };\n        resp.$getAll = async () => {\n            // TODO: eventually make this more concurrent\n            // await Promise.all([who(), what(), where()]);\n            let currentResponse = resp;\n            currentResponse.$hasMore = resp.$hasMore;\n            let allResponses = currentResponse;\n            while (currentResponse.$hasMore) {\n                currentResponse = await currentResponse.$getNextPage();\n                allResponses = [...currentResponse, ...allResponses];\n            }\n            allResponses.$getNextPage = async () => {\n                throw new Error('No more pages in this request');\n            };\n            allResponses.$getAll = async () => allResponses;\n            allResponses.$hasMore = false;\n            allResponses.$rawResponse = firstRawResponse;\n            return allResponses;\n        };\n\n        return resp;\n    }\n\n    /** returns an array modified to have additional meta data on it containing the results */\n    async query(type: string, query: Toolkit.Api.QueryOptions = {}, params = {}): Promise<Toolkit.Api.QueryResponse<Toolkit.Api.RallyObject>> {\n        const finalParams = _.defaults(query, params, this.defaultQueryOptions);\n        const url = Client._prepareUrl(this.options.server, type, false, finalParams);\n        let headers: any = {};\n        if (this.apiKey) {\n            headers.zsessionid = this.apiKey;\n        }\n        const resp = await this.throttle.queueAction(async () => {\n            const rawResponse = await fetch(url, {\n                method: 'GET',\n                mode: 'cors',\n                headers,\n                credentials: 'include'\n            });\n            /** @type {Promise<Toolkit.Api.QueryResponse>}  */\n            return await Client.manageResponse(rawResponse);\n        }, this.options.maxReadRetrys);\n        resp.$params = finalParams;\n        resp.$hasMore =\n            finalParams.limit && finalParams.limit !== Infinity\n                ? finalParams.start + finalParams.pagesize < finalParams.limit\n                : resp.$rawResponse.TotalResultCount >= finalParams.start + finalParams.pagesize;\n        const firstRawResponse = resp.$rawResponse;\n        resp.$getNextPage = async () => {\n            if (resp.$hasMore) {\n                let newQuery = _.cloneDeep(finalParams);\n                newQuery.start += query.pagesize;\n                return this.query(type, newQuery, params);\n            } else {\n                throw new Error('No more pages in this request');\n            }\n        };\n        resp.$getAll = async () => {\n            // TODO: eventually make this more concurrent\n            // await Promise.all([who(), what(), where()]);\n            let currentResponse = resp;\n            currentResponse.$hasMore = resp.$hasMore;\n            let allResponses = currentResponse;\n            while (currentResponse.$hasMore) {\n                currentResponse = await currentResponse.$getNextPage();\n                allResponses = [...currentResponse, ...allResponses];\n            }\n            allResponses.$getNextPage = async () => {\n                throw new Error('No more pages in this request');\n            };\n            allResponses.$getAll = async () => allResponses;\n            allResponses.$hasMore = false;\n            allResponses.$rawResponse = firstRawResponse;\n            return allResponses;\n        };\n        resp.forEach((d: Toolkit.Api.RallyObject) => this._decorateObject(d));\n        return resp;\n    }\n\n    /**\n     * Saves the current state of the Rally object to Rally.\n     * Creating a new object on the server if no _ref is provided in rallyObject\n     * @param type The type of object to be created\n     * @param rallyObject A new or existing Rally object\n     */\n    async save(type: string, rallyObject: Partial<Toolkit.Api.RallyObject>): Promise<Toolkit.Api.RallyObject>;\n    async save(type: string, rallyObject: Partial<Toolkit.Api.RallyObject>, queryOptions: Toolkit.Api.QueryOptions): Promise<Toolkit.Api.RallyObject>;\n    async save(rallyObject: Partial<Toolkit.Api.RallyObject>, queryOptions: Toolkit.Api.QueryOptions): Promise<Toolkit.Api.RallyObject>;\n    async save(rallyObject: Partial<Toolkit.Api.RallyObject>): Promise<Toolkit.Api.RallyObject>;\n    async save(\n        arg1: Partial<Toolkit.Api.RallyObject> | string,\n        arg2: Partial<Toolkit.Api.RallyObject> | Toolkit.Api.QueryOptions = {},\n        arg3: Toolkit.Api.QueryOptions = {}\n    ): Promise<Toolkit.Api.RallyObject> {\n        let type: string, url: string, rallyObject: Partial<Toolkit.Api.RallyObject>, params: Toolkit.Api.QueryOptions | Partial<Toolkit.Api.RallyObject>;\n        rallyObject = _.isObject(arg1) ? arg1 : arg2;\n        if (_.isString(arg1)) {\n            type = arg1;\n            rallyObject = arg2;\n            params = arg3;\n        } else if (_.isObject(rallyObject) && _.isString(rallyObject._ref)) {\n            params = arg2;\n            rallyObject = arg1;\n        } else {\n            throw new Error('Input must be either a string representing a type like \"Defect\" or an object containing a string field \"_ref\"');\n        }\n        let headers: any = {};\n        if (this.apiKey) {\n            headers.zsessionid = this.apiKey;\n        }\n        if (!rallyObject.Project && this.options.project) {\n            rallyObject.Project = this.options.project;\n        }\n        if (rallyObject._ref) {\n            url = Client._prepareUrl(this.options.server, Client.getTypeFromRef(rallyObject._ref), Client.getIdFromRef(rallyObject._ref), params);\n        } else {\n            const action = _.isNumber(rallyObject.ObjectID) ? `${rallyObject.ObjectID}` : 'create';\n\n            url = Client._prepareUrl(this.options.server, type, action, params);\n\n            if (_.isNumber(rallyObject.ObjectID)) {\n                url = `${url}/${rallyObject.ObjectID}?`;\n            } else {\n                url = `${url}/create?`;\n            }\n        }\n        const wrapper = {};\n        wrapper[type] = rallyObject;\n        const body = JSON.stringify(wrapper);\n        const resp = await this.throttle.queueAction(async () => {\n            const rawResponse = await fetch(url, {\n                method: 'PUT',\n                mode: 'cors',\n                headers,\n                credentials: 'include',\n                body\n            });\n\n            return await Client.manageResponse(rawResponse);\n        }, this.options.maxWriteRetrys);\n        resp.$params = params;\n        this._decorateObject(resp);\n        return resp;\n    }\n\n    /**\n     * Returns a Rally object by ref or by type and ID\n     */\n    async get(typeOrRef: string, objectID = null, params: Toolkit.Api.QueryOptions = {}): Promise<Toolkit.Api.RallyObject> {\n        const result = await this._request(typeOrRef, objectID, params, 'GET');\n        this._decorateObject(result);\n        return result;\n    }\n\n    /**\n     * Gets a subcollection stored on the Rally object\n     */\n    async getCollection(rallyObject: Toolkit.Api.RallyObject, collectionName: string, params: Toolkit.Api.QueryOptions = {}): Promise<Toolkit.Api.RallyObject[]> {\n        const finalParams = _.defaults(params, this.defaultQueryOptions);\n        const ref = Client.getRef(rallyObject);\n        const type = Client.getTypeFromRef(ref);\n        const objectId = Client.getIdFromRef(ref);\n        const action = `${objectId}/${collectionName}`;\n        const url = Client._prepareUrl(this.options.server, type, action, finalParams);\n        let headers: any = {};\n        if (this.apiKey) {\n            headers.zsessionid = this.apiKey;\n        }\n        const resp = await this.throttle.queueAction(async () => {\n            const rawResponse = await fetch(url, {\n                method: 'GET',\n                mode: 'cors',\n                headers,\n                credentials: 'include'\n            });\n            return await Client.manageResponse(rawResponse);\n        }, this.options.maxReadRetrys);\n        resp.$params = finalParams;\n        resp.forEach((d: Toolkit.Api.RallyObject) => this._decorateObject(d));\n        rallyObject[collectionName] = _.cloneDeep(_.defaults(resp, rallyObject[collectionName]));\n\n        return resp;\n    }\n\n    /** returns an array of cumulative flow data from Rally analytics */\n    async getCfdData(workspaceUUID: string, projectUUID: string, startDate: string, endDate: string = new Date().toISOString()): Promise<Toolkit.Api.QueryResponse<Toolkit.Api.RallyObject>> {\n        const url = `${this.options.server}/apps/cleo/analytics/cfd?workspaceUuid=${workspaceUUID}&projectUuid=${projectUUID}&startDate=${startDate}&endDate=${endDate}&cfdType=flowState`;\n        let headers: any = {};\n        if (this.apiKey) {\n            headers.zsessionid = this.apiKey;\n        }\n        const resp = await this.throttle.queueAction(async () => {\n            const rawResponse = await fetch(url, {\n                method: 'GET',\n                mode: 'cors',\n                headers,\n                credentials: 'include'\n            });\n\n            /** @type {Promise<Toolkit.Api.QueryResponse>}  */\n            return await Client.manageResponse(rawResponse);\n        }, this.options.maxReadRetrys);\n\n        return resp.data || resp;\n    }\n\n    /** returns an array of cumulative flow data from Rally analytics */\n    async getCfdDataNewEndpoint(\n        workspaceUUID: string,\n        projectUUID: string,\n        startDate: string,\n        endDate: string = new Date().toISOString()\n    ): Promise<Toolkit.Api.QueryResponse<Toolkit.Api.RallyObject>> {\n        const url = `${this.options.server}/apps/garthe/securedV1/cfd/project/${projectUUID}?workspaceUuid=${workspaceUUID}&scopeDown=false&scopeUp=false&startDate=${startDate}&endDate=${endDate}&cfdType=flowState`;\n        let headers: any = {};\n        if (this.apiKey) {\n            headers.zsessionid = this.apiKey;\n        }\n        const resp = await this.throttle.queueAction(async () => {\n            const rawResponse = await fetch(url, {\n                method: 'GET',\n                mode: 'cors',\n                headers,\n                credentials: 'include'\n            });\n\n            /** @type {Promise<Toolkit.Api.QueryResponse>}  */\n            return await Client.manageResponse(rawResponse);\n        }, this.options.maxReadRetrys);\n\n        return resp.data || resp;\n    }\n\n    /**\n     * @private\n     * @param typeOrRef The string name for a type `defect` or a string ref object `/defect/1234/`\n     * @param objectID\n     * @param params\n     * @param action\n     */\n    async _request(typeOrRef: string, objectID: any, params: Toolkit.Api.QueryOptions, action: 'DELETE'): Promise<any>;\n    async _request(typeOrRef: string, objectID: any, params: Toolkit.Api.QueryOptions, action: 'PUT'): Promise<any>;\n    async _request(typeOrRef: string, objectID: any, params: Toolkit.Api.QueryOptions, action: 'GET'): Promise<any>;\n    async _request(typeOrRef: string, objectID = null, params = {}, action: string): Promise<any> {\n        let type = typeOrRef;\n        if (Ref.isRef(typeOrRef)) {\n            type = Client.getTypeFromRef(typeOrRef);\n            objectID = Client.getIdFromRef(typeOrRef);\n        }\n        const finalParams = _.defaults(params, { fetch: true }, this.defaultQueryOptions);\n        delete finalParams.project;\n        delete finalParams.workspace;\n        const url = Client._prepareUrl(this.options.server, type, objectID, finalParams);\n        const headers = {\n            zsessionid: this.apiKey\n        };\n        //TODO make sure this is correct, do only puts count as writes?\n        let retryCount = action === 'PUT' ? this.options.maxWriteRetrys : this.options.maxReadRetrys;\n        let resp = await this.throttle.queueAction(async () => {\n            const rawResponse = await fetch(url, {\n                method: action,\n                mode: 'cors',\n                headers,\n                credentials: 'include'\n            });\n            return await Client.manageResponse(rawResponse);\n        }, retryCount);\n        resp = resp[_.keys(resp)[0]];\n        resp.$params = finalParams;\n        return resp;\n    }\n\n    /**\n     *\n     *  Adds the delete and save options to each object\n     */\n    async _decorateObject(rallyObject: Toolkit.Api.RallyObject) {\n        rallyObject.$save = () => this.save(rallyObject);\n        rallyObject.$delete = () => this.delete(rallyObject);\n    }\n\n    /**\n     *\n     * @param  inputOrRef Either a Rally object or the ref for a Rally object\n     * @param  params Optional Params to be sent with the request\n     * @param  ignoreDelay Pass true if you don't want to wait 500 ms longer to return. This time gives the Rally server a chance to finish deleting\n     */\n    async delete(inputOrRef: string | Toolkit.Api.RallyObject, params = {}, ignoreDelay = false) {\n        let ref: any = inputOrRef;\n        ref = _.isObject(inputOrRef) ? ref._ref : ref;\n        const resp = await this._request(ref, null, params, 'DELETE');\n        if (!ignoreDelay) {\n            // delete returns before the server has finished deleting adding in a fake wait to hope it is done before\n            const delayResult = await Client.delay(500);\n        }\n        return resp;\n    }\n\n    /**\n     * returns the ref from a rally object or returns the ref is input is passed as a string\n     */\n    static getRef(input: string | Toolkit.Api.RallyObject, objectID: number = 0): string {\n        let obj: any;\n        if (_.isObject(input)) {\n            obj = input;\n            if (_.isString(obj._ref)) {\n                return obj._ref;\n            }\n            throw new Error('_ref must be specified to use getRef from a RallyObject');\n        }\n        if (_.isNumber(objectID) && objectID) {\n            return `/${input}/${objectID}`;\n        }\n        return input.toString();\n    }\n\n    /**\n     * Gets the ID portion of a ref\n     */\n    static getIdFromRef(ref: string): string {\n        return Ref.getId(ref);\n    }\n\n    /**\n     * Gets the type portion of a ref\n     */\n    static getTypeFromRef(ref: string): string {\n        return Ref.getType(ref);\n    }\n\n    get defaultQueryOptions(): Toolkit.Api.QueryOptions {\n        const defaultRequest = {\n            fetch: ['ObjectID', 'Name'],\n            start: 1,\n            pagesize: 2000,\n            projectScopeUp: true,\n            projectScopeDown: true,\n            compact: false,\n            includePermissions: true,\n            project: undefined,\n            workspace: this.workspace\n        };\n        return defaultRequest;\n    }\n\n    static get defaultLookbackRequest(): Toolkit.Api.QueryOptions {\n        const value = {\n            find: {},\n            fields: ['ObjectID', 'Name'],\n            hydrate: [],\n            start: 0,\n            pagesize: 100,\n            removeUnauthorizedSnapshots: true\n        };\n        return value;\n    }\n\n    /**\n     * @private\n     */\n    static _prepareUrl(server: string, type: string, action: boolean | string | number = '', params: Toolkit.Api.QueryOptions = {}) {\n        if (_.isNumber(action)) action = action.toString();\n        if (!params.workspace) {\n            delete params.workspace;\n        }\n        if (!params.project) {\n            delete params.project;\n        }\n        const searchParams = new URLSearchParams(params);\n        if (!server.endsWith('/')) {\n            server += '/';\n        }\n        action = _.isString(action) ? `/${action}` : '';\n        return `${server}slm/webservice/v2.0/${type}${action}?${searchParams.toString()}`;\n    }\n\n    /**\n     * @private\n     */\n    static async delay(millisecondsOfDelay: number, scopeFuction: Function = () => {}) {\n        return new Promise((resolve) => {\n            setTimeout(resolve.bind(null, scopeFuction), millisecondsOfDelay);\n        });\n    }\n}\n","import _ = require('lodash');\nimport * as Toolkit from '../index';\n\nexport class Common {\n\n    client: Toolkit.Client\n\n    constructor(client: Toolkit.Client) {\n        this.client = client;\n    }\n\n    /**\n     * \n     * @param allRoots The list of root projects that the child projects will be returned from\n     * @param  fetch The list of fields you want fetched on the children. The children field will be added to the user selection\n     */\n    async getAllChildProjects(\n        allRoots: Toolkit.Api.RallyObject[],\n        fetch: string[] = ['Name', 'Workspace'],\n        onEachPageComplete = (onePage) => []\n    ) {\n        const requiredFetchFields = _.uniq([\"Children\", ...fetch])\n        if (!allRoots.length) {\n            return [];\n        }\n        const allClosed = allRoots\n            .filter(r => {\n                if (!r.Children) {\n                    return true;\n                }\n                return !!r.Children.Count;\n            });\n        let children = [];\n        let getNext = async () => {\n            if (!allClosed.length) {\n                return;\n            }\n            const project = allClosed.pop();\n            let result = [];\n            try {\n                result = await this.client.getCollection(project, 'Children', { fetch: requiredFetchFields });\n            }\n            catch (err) {\n                allClosed.unshift(project)\n            }\n            finally {\n                children = _.flatten([...children, ...result]);\n                onEachPageComplete(children);\n                if (allClosed.length) {\n                    return getNext();\n                }\n            }\n        }\n        //start some workers\n        const respAll = await Promise.all([\n            getNext(),\n            getNext(),\n            getNext(),\n            getNext(),\n            getNext(),\n            getNext(),\n            getNext()\n        ]);\n\n        const decendents = await this.getAllChildProjects(children, fetch, onEachPageComplete);\n        let finalResponse = _.flatten([...decendents, ...allRoots, ...children]);\n\n        const removeDupes = {};\n        finalResponse.forEach((s) => { removeDupes[s['_ref']] = s; });\n        finalResponse = Object.values(removeDupes);\n        return finalResponse;\n    }\n}\n","import _ = require('lodash');\n/**\n @module Ref\n\n */\n\n//                              oid |  -oid  |                                   uuid                                    |  uuid compact\nconst IDENTITY_REGEX_PARTIAL = '[0-9]+|-?[0-9]+|[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|[a-fA-F0-9]{32}';\n\nconst IDENTITY_REGEX = `(${IDENTITY_REGEX_PARTIAL})`;\n\nconst NON_CAP_IDENTITY_REGEX = `(?:${IDENTITY_REGEX_PARTIAL})`;\n\nconst TYPE_REGEX = '(\\\\w+)';\n\nconst DYNATYPE_REGEX = '(\\\\w{2,}\\\\/\\\\w+)';\n\nconst EXT_REGEX = '(?:\\\\.js\\\\??.*)';\n\nconst REF_REGEXES = [\n\n  // dynatype collection ref (/portfolioitem/feature/1234/children)\n  new RegExp(`.*?\\\\/${DYNATYPE_REGEX}\\\\/${IDENTITY_REGEX}\\\\/${TYPE_REGEX}${EXT_REGEX}?$`),\n\n  // dynatype ref (/portfolioitem/feature/1234)\n  new RegExp(`.*?\\\\/${DYNATYPE_REGEX}\\\\/${IDENTITY_REGEX}${EXT_REGEX}?$`),\n\n  // collection ref (/defect/1234/tasks)\n  new RegExp(`.*?\\\\/${TYPE_REGEX}\\\\/${IDENTITY_REGEX}\\\\/${TYPE_REGEX}${EXT_REGEX}?$`),\n\n  // basic ref (/defect/1234)\n  new RegExp(`.*?\\\\/${TYPE_REGEX}\\\\/${IDENTITY_REGEX}${EXT_REGEX}?$`),\n\n  // permission ref (/workspacepermission/123u456w1)\n  new RegExp(`.*?\\\\/${TYPE_REGEX}\\\\/(${NON_CAP_IDENTITY_REGEX}u${NON_CAP_IDENTITY_REGEX}[pw]${NON_CAP_IDENTITY_REGEX})${EXT_REGEX}?$`)\n];\n\nfunction match(input) {\n  input = (input && input._ref) ? input._ref : (input || '');\n  const regexMatch = _.find(REF_REGEXES, regex => regex.test(input));\n  return (regexMatch && input.match(regexMatch)) || null;\n}\n\n/**\n * A basic class for managing refs\n */\nexport class Ref {\n  /**\n   * Returns true if this item is a ref\n   * @param {any} input \n   */\n  static isRef(input: any): boolean {\n    return Boolean(match(input));\n  }\n\n  /**\n   * Returns the relative slice of a ref\n   * turning `'https://rally1...words.../slm/defect/1234' => '/defect/1234'`\n   * @param {any} input possible ref\n   */\n  static getRelative(input: any): string {\n    const refMatch = match(input);\n    return (refMatch && [''].concat(refMatch.slice(1)).join('/')) || null;\n  }\n\n  /**\n   * Gets the type from a ref. `'/defect/2345' => 'defect'`\n   * @param {*} input \n   */\n  static getType(input: any): string {\n    const refMatch = match(input);\n    return (refMatch && refMatch[1]) || null;\n  }\n\n  /**\n   * returns the id portion of a ref\n   * `/defect/1234 => '1234'`\n   * @param {*} input \n   */\n  static getId(input: any): string {\n    const refMatch = match(input);\n    return (refMatch && refMatch[2]) || null;\n  }\n}\n\n","\nimport _ = require('lodash');\nimport Bottleneck from \"bottleneck\";\n\n//push\n// queue, if less than max execute immeadiatly\n\n// execute \n// \n\nexport class Throttle {\n  /** @private */\n  maxPromises: number\n  /** @private */\n  bottleneck: Bottleneck\n  /**\n   * \n   * @param maxPromises The maxiumum number of promises allowed at a time\n   */\n  constructor(maxPromises: number = 10, maxRetries: number = 5) {\n    this.maxPromises = maxPromises;\n    this.bottleneck = new Bottleneck({\n      maxConcurrent: maxPromises\n    });\n  }\n\n  /** Adds and action to the queue, attempts to execute the next action \n   * Execution order is not guarenteed \n   * @param maxRetries The maxiumum number of automatic retries \n   * @param action The action that will be called when the queue is ready\n   */\n  async queueAction<R>(action: () => PromiseLike<R>, maxRetries: number = 0) {\n    try {\n      const resp = await this.bottleneck.wrap(action)();\n      return resp;\n    }\n    catch (err) {\n      if (maxRetries > 0) {\n        return this.queueAction(action, --maxRetries);\n      }\n      throw err;\n    }\n  }\n\n\n}\n\n","module.exports = _;","module.exports = fetch;"],"sourceRoot":""}